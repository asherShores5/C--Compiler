Nonterminals useless in grammar

    VarDeclList


Rules useless in grammar

   52 VarDeclList: %empty
   53            | VarDecl VarDeclList
   54            | VarDecl


State 1 conflicts: 2 reduce/reduce
State 3 conflicts: 2 reduce/reduce
State 19 conflicts: 1 shift/reduce, 2 reduce/reduce
State 22 conflicts: 9 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl
    4         | FunDeclList

    5 Decl: VarDecl
    6     | StmtList
    7     | FunDecl

    8 VarDecl: Type ID SEMICOLON
    9        | Type ID LBRACKET NUMBER RBRACKET SEMICOLON

   10 FunDeclList: FunDecl
   11            | FunDecl FunDeclList

   12 $@1: %empty

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   14 ParamDecList: %empty
   15             | ParamDecListTail

   16 ParamDecListTail: ParamDecl
   17                 | ParamDecl ParamDecListTail

   18 ParamDecl: Type ID

   19 Block: LCURLY DeclList RCURLY

   20 Type: INT
   21     | FLOAT
   22     | CHAR

   23 StmtList: Stmt
   24         | Stmt StmtList

   25 Stmt: SEMICOLON
   26     | Expr SEMICOLON
   27     | RETURN Expr SEMICOLON
   28     | WRITE Expr SEMICOLON
   29     | WRITELN SEMICOLON

   30 Expr: Primary
   31     | UnaryOp Expr
   32     | ID EQ Expr
   33     | ID LPAREN ParamList RPAREN
   34     | ID LBRACKET NUMBER RBRACKET EQ Primary
   35     | MathExpr

   36 MathExpr: ID BinOp MathExpr
   37         | NUMBER BinOp MathExpr
   38         | ID
   39         | NUMBER

   40 ParamList: %empty

   41 $@2: %empty

   42 ParamList: Primary $@2 ParamList

   43 Primary: ID
   44        | NUMBER
   45        | CHARACTER
   46        | LPAREN Expr RPAREN

   47 UnaryOp: MINUS

   48 BinOp: PLUS
   49      | MINUS
   50      | TIMES
   51      | DIVIDE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 8 9 13 18 32 33 34 36 38 43
    SEMICOLON <string> (259) 8 9 25 26 27 28 29
    EQ <string> (260) 32 34
    NUMBER <number> (261) 9 34 37 39 44
    WRITE <string> (262) 28
    FUNC <string> (263) 13
    PLUS <string> (264) 48
    MINUS <string> (265) 47 49
    TIMES <string> (266) 50
    DIVIDE <string> (267) 51
    LBRACKET <string> (268) 9 34
    RBRACKET <string> (269) 9 34
    LPAREN <string> (270) 13 33 46
    RPAREN <string> (271) 13 33 46
    LCURLY <string> (272) 19
    RCURLY <string> (273) 19
    INT <string> (274) 20
    CHAR <string> (275) 22
    FLOAT <string> (276) 21
    RETURN <string> (277) 27
    WRITELN <string> (278) 29
    CHARACTER <string> (279) 45


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    Program <ast> (26)
        on left: 1
        on right: 0
    DeclList <ast> (27)
        on left: 2 3 4
        on right: 1 2 19
    Decl <ast> (28)
        on left: 5 6 7
        on right: 2 3
    VarDecl <ast> (29)
        on left: 8 9
        on right: 5
    FunDeclList <ast> (30)
        on left: 10 11
        on right: 4 11
    FunDecl <ast> (31)
        on left: 13
        on right: 7 10 11
    $@1 (32)
        on left: 12
        on right: 13
    ParamDecList <ast> (33)
        on left: 14 15
        on right: 13
    ParamDecListTail <ast> (34)
        on left: 16 17
        on right: 15 17
    ParamDecl <ast> (35)
        on left: 18
        on right: 16 17
    Block <ast> (36)
        on left: 19
        on right: 13
    Type <ast> (37)
        on left: 20 21 22
        on right: 8 9 13 18
    StmtList <ast> (38)
        on left: 23 24
        on right: 6 24
    Stmt <ast> (39)
        on left: 25 26 27 28 29
        on right: 23 24
    Expr <ast> (40)
        on left: 30 31 32 33 34 35
        on right: 26 27 28 31 32 46
    MathExpr <ast> (41)
        on left: 36 37 38 39
        on right: 35 36 37
    ParamList <ast> (42)
        on left: 40 42
        on right: 33 42
    $@2 (43)
        on left: 41
        on right: 42
    Primary <ast> (44)
        on left: 43 44 45 46
        on right: 30 34 42
    UnaryOp <ast> (45)
        on left: 47
        on right: 31
    BinOp <ast> (46)
        on left: 48 49 50 51
        on right: 36 37


State 0

    0 $accept: . Program $end

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    Program      go to state 14
    DeclList     go to state 15
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    MathExpr     go to state 24
    Primary      go to state 25
    UnaryOp      go to state 26


State 1

   32 Expr: ID . EQ Expr
   33     | ID . LPAREN ParamList RPAREN
   34     | ID . LBRACKET NUMBER RBRACKET EQ Primary
   36 MathExpr: ID . BinOp MathExpr
   38         | ID .
   43 Primary: ID .

    EQ        shift, and go to state 27
    PLUS      shift, and go to state 28
    MINUS     shift, and go to state 29
    TIMES     shift, and go to state 30
    DIVIDE    shift, and go to state 31
    LBRACKET  shift, and go to state 32
    LPAREN    shift, and go to state 33

    SEMICOLON  reduce using rule 38 (MathExpr)
    SEMICOLON  [reduce using rule 43 (Primary)]
    RPAREN     reduce using rule 38 (MathExpr)
    RPAREN     [reduce using rule 43 (Primary)]
    $default   reduce using rule 38 (MathExpr)

    BinOp  go to state 34


State 2

   25 Stmt: SEMICOLON .

    $default  reduce using rule 25 (Stmt)


State 3

   37 MathExpr: NUMBER . BinOp MathExpr
   39         | NUMBER .
   44 Primary: NUMBER .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    SEMICOLON  reduce using rule 39 (MathExpr)
    SEMICOLON  [reduce using rule 44 (Primary)]
    RPAREN     reduce using rule 39 (MathExpr)
    RPAREN     [reduce using rule 44 (Primary)]
    $default   reduce using rule 39 (MathExpr)

    BinOp  go to state 35


State 4

   28 Stmt: WRITE . Expr SEMICOLON

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 36
    MathExpr  go to state 24
    Primary   go to state 25
    UnaryOp   go to state 26


State 5

   13 FunDecl: FUNC . Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    Type  go to state 37


State 6

   47 UnaryOp: MINUS .

    $default  reduce using rule 47 (UnaryOp)


State 7

   46 Primary: LPAREN . Expr RPAREN

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 38
    MathExpr  go to state 24
    Primary   go to state 25
    UnaryOp   go to state 26


State 8

   20 Type: INT .

    $default  reduce using rule 20 (Type)


State 9

   22 Type: CHAR .

    $default  reduce using rule 22 (Type)


State 10

   21 Type: FLOAT .

    $default  reduce using rule 21 (Type)


State 11

   27 Stmt: RETURN . Expr SEMICOLON

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 39
    MathExpr  go to state 24
    Primary   go to state 25
    UnaryOp   go to state 26


State 12

   29 Stmt: WRITELN . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 13

   45 Primary: CHARACTER .

    $default  reduce using rule 45 (Primary)


State 14

    0 $accept: Program . $end

    $end  shift, and go to state 41


State 15

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 16

    2 DeclList: Decl . DeclList
    3         | Decl .

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 42
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    MathExpr     go to state 24
    Primary      go to state 25
    UnaryOp      go to state 26


State 17

    5 Decl: VarDecl .

    $default  reduce using rule 5 (Decl)


State 18

    4 DeclList: FunDeclList .

    $default  reduce using rule 4 (DeclList)


State 19

    7 Decl: FunDecl .
   10 FunDeclList: FunDecl .
   11            | FunDecl . FunDeclList

    FUNC  shift, and go to state 5

    $end      reduce using rule 7 (Decl)
    $end      [reduce using rule 10 (FunDeclList)]
    FUNC      [reduce using rule 7 (Decl)]
    RCURLY    reduce using rule 7 (Decl)
    RCURLY    [reduce using rule 10 (FunDeclList)]
    $default  reduce using rule 7 (Decl)

    FunDeclList  go to state 43
    FunDecl      go to state 44


State 20

    8 VarDecl: Type . ID SEMICOLON
    9        | Type . ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 45


State 21

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


State 22

   23 StmtList: Stmt .
   24         | Stmt . StmtList

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    ID         [reduce using rule 23 (StmtList)]
    SEMICOLON  [reduce using rule 23 (StmtList)]
    NUMBER     [reduce using rule 23 (StmtList)]
    WRITE      [reduce using rule 23 (StmtList)]
    MINUS      [reduce using rule 23 (StmtList)]
    LPAREN     [reduce using rule 23 (StmtList)]
    RETURN     [reduce using rule 23 (StmtList)]
    WRITELN    [reduce using rule 23 (StmtList)]
    CHARACTER  [reduce using rule 23 (StmtList)]
    $default   reduce using rule 23 (StmtList)

    StmtList  go to state 46
    Stmt      go to state 22
    Expr      go to state 23
    MathExpr  go to state 24
    Primary   go to state 25
    UnaryOp   go to state 26


State 23

   26 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 24

   35 Expr: MathExpr .

    $default  reduce using rule 35 (Expr)


State 25

   30 Expr: Primary .

    $default  reduce using rule 30 (Expr)


State 26

   31 Expr: UnaryOp . Expr

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 48
    MathExpr  go to state 24
    Primary   go to state 25
    UnaryOp   go to state 26


State 27

   32 Expr: ID EQ . Expr

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 49
    MathExpr  go to state 24
    Primary   go to state 25
    UnaryOp   go to state 26


State 28

   48 BinOp: PLUS .

    $default  reduce using rule 48 (BinOp)


State 29

   49 BinOp: MINUS .

    $default  reduce using rule 49 (BinOp)


State 30

   50 BinOp: TIMES .

    $default  reduce using rule 50 (BinOp)


State 31

   51 BinOp: DIVIDE .

    $default  reduce using rule 51 (BinOp)


State 32

   34 Expr: ID LBRACKET . NUMBER RBRACKET EQ Primary

    NUMBER  shift, and go to state 50


State 33

   33 Expr: ID LPAREN . ParamList RPAREN

    ID         shift, and go to state 51
    NUMBER     shift, and go to state 52
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 40 (ParamList)

    ParamList  go to state 53
    Primary    go to state 54


State 34

   36 MathExpr: ID BinOp . MathExpr

    ID      shift, and go to state 55
    NUMBER  shift, and go to state 56

    MathExpr  go to state 57


State 35

   37 MathExpr: NUMBER BinOp . MathExpr

    ID      shift, and go to state 55
    NUMBER  shift, and go to state 56

    MathExpr  go to state 58


State 36

   28 Stmt: WRITE Expr . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 37

   13 FunDecl: FUNC Type . ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 60


State 38

   46 Primary: LPAREN Expr . RPAREN

    RPAREN  shift, and go to state 61


State 39

   27 Stmt: RETURN Expr . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 40

   29 Stmt: WRITELN SEMICOLON .

    $default  reduce using rule 29 (Stmt)


State 41

    0 $accept: Program $end .

    $default  accept


State 42

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 43

   11 FunDeclList: FunDecl FunDeclList .

    $default  reduce using rule 11 (FunDeclList)


State 44

   10 FunDeclList: FunDecl .
   11            | FunDecl . FunDeclList

    FUNC  shift, and go to state 5

    $default  reduce using rule 10 (FunDeclList)

    FunDeclList  go to state 43
    FunDecl      go to state 44


State 45

    8 VarDecl: Type ID . SEMICOLON
    9        | Type ID . LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 63
    LBRACKET   shift, and go to state 64


State 46

   24 StmtList: Stmt StmtList .

    $default  reduce using rule 24 (StmtList)


State 47

   26 Stmt: Expr SEMICOLON .

    $default  reduce using rule 26 (Stmt)


State 48

   31 Expr: UnaryOp Expr .

    $default  reduce using rule 31 (Expr)


State 49

   32 Expr: ID EQ Expr .

    $default  reduce using rule 32 (Expr)


State 50

   34 Expr: ID LBRACKET NUMBER . RBRACKET EQ Primary

    RBRACKET  shift, and go to state 65


State 51

   43 Primary: ID .

    $default  reduce using rule 43 (Primary)


State 52

   44 Primary: NUMBER .

    $default  reduce using rule 44 (Primary)


State 53

   33 Expr: ID LPAREN ParamList . RPAREN

    RPAREN  shift, and go to state 66


State 54

   42 ParamList: Primary . $@2 ParamList

    $default  reduce using rule 41 ($@2)

    $@2  go to state 67


State 55

   36 MathExpr: ID . BinOp MathExpr
   38         | ID .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 38 (MathExpr)

    BinOp  go to state 34


State 56

   37 MathExpr: NUMBER . BinOp MathExpr
   39         | NUMBER .

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 39 (MathExpr)

    BinOp  go to state 35


State 57

   36 MathExpr: ID BinOp MathExpr .

    $default  reduce using rule 36 (MathExpr)


State 58

   37 MathExpr: NUMBER BinOp MathExpr .

    $default  reduce using rule 37 (MathExpr)


State 59

   28 Stmt: WRITE Expr SEMICOLON .

    $default  reduce using rule 28 (Stmt)


State 60

   13 FunDecl: FUNC Type ID . LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 68


State 61

   46 Primary: LPAREN Expr RPAREN .

    $default  reduce using rule 46 (Primary)


State 62

   27 Stmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 27 (Stmt)


State 63

    8 VarDecl: Type ID SEMICOLON .

    $default  reduce using rule 8 (VarDecl)


State 64

    9 VarDecl: Type ID LBRACKET . NUMBER RBRACKET SEMICOLON

    NUMBER  shift, and go to state 69


State 65

   34 Expr: ID LBRACKET NUMBER RBRACKET . EQ Primary

    EQ  shift, and go to state 70


State 66

   33 Expr: ID LPAREN ParamList RPAREN .

    $default  reduce using rule 33 (Expr)


State 67

   42 ParamList: Primary $@2 . ParamList

    ID         shift, and go to state 51
    NUMBER     shift, and go to state 52
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 40 (ParamList)

    ParamList  go to state 71
    Primary    go to state 54


State 68

   13 FunDecl: FUNC Type ID LPAREN . $@1 ParamDecList RPAREN Block

    $default  reduce using rule 12 ($@1)

    $@1  go to state 72


State 69

    9 VarDecl: Type ID LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 73


State 70

   34 Expr: ID LBRACKET NUMBER RBRACKET EQ . Primary

    ID         shift, and go to state 51
    NUMBER     shift, and go to state 52
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Primary  go to state 74


State 71

   42 ParamList: Primary $@2 ParamList .

    $default  reduce using rule 42 (ParamList)


State 72

   13 FunDecl: FUNC Type ID LPAREN $@1 . ParamDecList RPAREN Block

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 14 (ParamDecList)

    ParamDecList      go to state 75
    ParamDecListTail  go to state 76
    ParamDecl         go to state 77
    Type              go to state 78


State 73

    9 VarDecl: Type ID LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 74

   34 Expr: ID LBRACKET NUMBER RBRACKET EQ Primary .

    $default  reduce using rule 34 (Expr)


State 75

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList . RPAREN Block

    RPAREN  shift, and go to state 80


State 76

   15 ParamDecList: ParamDecListTail .

    $default  reduce using rule 15 (ParamDecList)


State 77

   16 ParamDecListTail: ParamDecl .
   17                 | ParamDecl . ParamDecListTail

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 16 (ParamDecListTail)

    ParamDecListTail  go to state 81
    ParamDecl         go to state 77
    Type              go to state 78


State 78

   18 ParamDecl: Type . ID

    ID  shift, and go to state 82


State 79

    9 VarDecl: Type ID LBRACKET NUMBER RBRACKET SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 80

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN . Block

    LCURLY  shift, and go to state 83

    Block  go to state 84


State 81

   17 ParamDecListTail: ParamDecl ParamDecListTail .

    $default  reduce using rule 17 (ParamDecListTail)


State 82

   18 ParamDecl: Type ID .

    $default  reduce using rule 18 (ParamDecl)


State 83

   19 Block: LCURLY . DeclList RCURLY

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    DeclList     go to state 85
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    MathExpr     go to state 24
    Primary      go to state 25
    UnaryOp      go to state 26


State 84

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block .

    $default  reduce using rule 13 (FunDecl)


State 85

   19 Block: LCURLY DeclList . RCURLY

    RCURLY  shift, and go to state 86


State 86

   19 Block: LCURLY DeclList RCURLY .

    $default  reduce using rule 19 (Block)
