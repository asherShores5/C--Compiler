Terminals unused in grammar

    '*'
    '/'
    '-'
    '+'


Rules useless in parser due to conflicts

    7 VarDeclList: VarDecl


State 19 conflicts: 1 shift/reduce, 1 reduce/reduce
State 22 conflicts: 9 shift/reduce
State 84 conflicts: 9 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl
    4         | FunDeclList

    5 VarDeclList: %empty
    6            | VarDecl VarDeclList
    7            | VarDecl

    8 Decl: VarDecl
    9     | StmtList
   10     | FunDecl

   11 VarDecl: Type ID SEMICOLON
   12        | Type ID LBRACKET NUMBER RBRACKET SEMICOLON

   13 FunDeclList: FunDecl
   14            | FunDecl FunDeclList

   15 $@1: %empty

   16 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   17 ParamDecList: %empty
   18             | ParamDecListTail

   19 ParamDecListTail: ParamDecl
   20                 | ParamDecl ParamDecListTail

   21 ParamDecl: Type ID

   22 Block: LCURLY VarDeclList StmtList RCURLY

   23 Type: INT
   24     | FLOAT
   25     | CHAR

   26 StmtList: Stmt
   27         | Stmt StmtList

   28 Stmt: SEMICOLON
   29     | Expr SEMICOLON
   30     | RETURN Expr SEMICOLON
   31     | WRITE Expr SEMICOLON
   32     | WRITELN SEMICOLON

   33 Expr: Primary
   34     | UnaryOp Expr
   35     | ID EQ MathExpr
   36     | ID LPAREN ParamList RPAREN
   37     | ID LBRACKET NUMBER RBRACKET EQ Primary

   38 MathExpr: ID BinOp MathExpr
   39         | NUMBER BinOp MathExpr
   40         | ID
   41         | NUMBER

   42 ParamList: %empty

   43 $@2: %empty

   44 ParamList: Primary $@2 ParamList

   45 Primary: ID
   46        | NUMBER
   47        | CHARACTER
   48        | LPAREN Expr RPAREN

   49 UnaryOp: MINUS

   50 BinOp: PLUS
   51      | MINUS
   52      | TIMES
   53      | DIVIDE


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    error (256)
    ID <string> (258) 11 12 16 21 35 36 37 38 40 45
    SEMICOLON <string> (259) 11 12 28 29 30 31 32
    EQ <string> (260) 35 37
    PLUS <string> (261) 50
    NUMBER <number> (262) 12 37 39 41 46
    WRITE <string> (263) 31
    FUNC <string> (264) 16
    MINUS <string> (265) 49 51
    TIMES <string> (266) 52
    DIVIDE <string> (267) 53
    LBRACKET <string> (268) 12 37
    RBRACKET <string> (269) 12 37
    LPAREN <string> (270) 16 36 48
    RPAREN <string> (271) 16 36 48
    LCURLY <string> (272) 22
    RCURLY <string> (273) 22
    INT <string> (274) 23
    CHAR <string> (275) 25
    FLOAT <string> (276) 24
    RETURN <string> (277) 30
    WRITELN <string> (278) 32
    CHARACTER <string> (279) 47


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    Program <ast> (30)
        on left: 1
        on right: 0
    DeclList <ast> (31)
        on left: 2 3 4
        on right: 1 2
    VarDeclList <ast> (32)
        on left: 5 6 7
        on right: 6 22
    Decl <ast> (33)
        on left: 8 9 10
        on right: 2 3
    VarDecl <ast> (34)
        on left: 11 12
        on right: 6 7 8
    FunDeclList <ast> (35)
        on left: 13 14
        on right: 4 14
    FunDecl <ast> (36)
        on left: 16
        on right: 10 13 14
    $@1 (37)
        on left: 15
        on right: 16
    ParamDecList <ast> (38)
        on left: 17 18
        on right: 16
    ParamDecListTail <ast> (39)
        on left: 19 20
        on right: 18 20
    ParamDecl <ast> (40)
        on left: 21
        on right: 19 20
    Block <ast> (41)
        on left: 22
        on right: 16
    Type <ast> (42)
        on left: 23 24 25
        on right: 11 12 16 21
    StmtList <ast> (43)
        on left: 26 27
        on right: 9 22 27
    Stmt <ast> (44)
        on left: 28 29 30 31 32
        on right: 26 27
    Expr <ast> (45)
        on left: 33 34 35 36 37
        on right: 29 30 31 34 48
    MathExpr <ast> (46)
        on left: 38 39 40 41
        on right: 35 38 39
    ParamList <ast> (47)
        on left: 42 44
        on right: 36 44
    $@2 (48)
        on left: 43
        on right: 44
    Primary <ast> (49)
        on left: 45 46 47 48
        on right: 33 37 44
    UnaryOp <ast> (50)
        on left: 49
        on right: 34
    BinOp <ast> (51)
        on left: 50 51 52 53
        on right: 38 39


State 0

    0 $accept: . Program $end

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    Program      go to state 14
    DeclList     go to state 15
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    Primary      go to state 24
    UnaryOp      go to state 25


State 1

   35 Expr: ID . EQ MathExpr
   36     | ID . LPAREN ParamList RPAREN
   37     | ID . LBRACKET NUMBER RBRACKET EQ Primary
   45 Primary: ID .

    EQ        shift, and go to state 26
    LBRACKET  shift, and go to state 27
    LPAREN    shift, and go to state 28

    $default  reduce using rule 45 (Primary)


State 2

   28 Stmt: SEMICOLON .

    $default  reduce using rule 28 (Stmt)


State 3

   46 Primary: NUMBER .

    $default  reduce using rule 46 (Primary)


State 4

   31 Stmt: WRITE . Expr SEMICOLON

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr     go to state 29
    Primary  go to state 24
    UnaryOp  go to state 25


State 5

   16 FunDecl: FUNC . Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    Type  go to state 30


State 6

   49 UnaryOp: MINUS .

    $default  reduce using rule 49 (UnaryOp)


State 7

   48 Primary: LPAREN . Expr RPAREN

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr     go to state 31
    Primary  go to state 24
    UnaryOp  go to state 25


State 8

   23 Type: INT .

    $default  reduce using rule 23 (Type)


State 9

   25 Type: CHAR .

    $default  reduce using rule 25 (Type)


State 10

   24 Type: FLOAT .

    $default  reduce using rule 24 (Type)


State 11

   30 Stmt: RETURN . Expr SEMICOLON

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr     go to state 32
    Primary  go to state 24
    UnaryOp  go to state 25


State 12

   32 Stmt: WRITELN . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 13

   47 Primary: CHARACTER .

    $default  reduce using rule 47 (Primary)


State 14

    0 $accept: Program . $end

    $end  shift, and go to state 34


State 15

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 16

    2 DeclList: Decl . DeclList
    3         | Decl .

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 35
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    Primary      go to state 24
    UnaryOp      go to state 25


State 17

    8 Decl: VarDecl .

    $default  reduce using rule 8 (Decl)


State 18

    4 DeclList: FunDeclList .

    $default  reduce using rule 4 (DeclList)


State 19

   10 Decl: FunDecl .
   13 FunDeclList: FunDecl .
   14            | FunDecl . FunDeclList

    FUNC  shift, and go to state 5

    $end      reduce using rule 10 (Decl)
    $end      [reduce using rule 13 (FunDeclList)]
    FUNC      [reduce using rule 10 (Decl)]
    $default  reduce using rule 10 (Decl)

    FunDeclList  go to state 36
    FunDecl      go to state 37


State 20

   11 VarDecl: Type . ID SEMICOLON
   12        | Type . ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 38


State 21

    9 Decl: StmtList .

    $default  reduce using rule 9 (Decl)


State 22

   26 StmtList: Stmt .
   27         | Stmt . StmtList

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    ID         [reduce using rule 26 (StmtList)]
    SEMICOLON  [reduce using rule 26 (StmtList)]
    NUMBER     [reduce using rule 26 (StmtList)]
    WRITE      [reduce using rule 26 (StmtList)]
    MINUS      [reduce using rule 26 (StmtList)]
    LPAREN     [reduce using rule 26 (StmtList)]
    RETURN     [reduce using rule 26 (StmtList)]
    WRITELN    [reduce using rule 26 (StmtList)]
    CHARACTER  [reduce using rule 26 (StmtList)]
    $default   reduce using rule 26 (StmtList)

    StmtList  go to state 39
    Stmt      go to state 22
    Expr      go to state 23
    Primary   go to state 24
    UnaryOp   go to state 25


State 23

   29 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 24

   33 Expr: Primary .

    $default  reduce using rule 33 (Expr)


State 25

   34 Expr: UnaryOp . Expr

    ID         shift, and go to state 1
    NUMBER     shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr     go to state 41
    Primary  go to state 24
    UnaryOp  go to state 25


State 26

   35 Expr: ID EQ . MathExpr

    ID      shift, and go to state 42
    NUMBER  shift, and go to state 43

    MathExpr  go to state 44


State 27

   37 Expr: ID LBRACKET . NUMBER RBRACKET EQ Primary

    NUMBER  shift, and go to state 45


State 28

   36 Expr: ID LPAREN . ParamList RPAREN

    ID         shift, and go to state 46
    NUMBER     shift, and go to state 3
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 42 (ParamList)

    ParamList  go to state 47
    Primary    go to state 48


State 29

   31 Stmt: WRITE Expr . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 30

   16 FunDecl: FUNC Type . ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 50


State 31

   48 Primary: LPAREN Expr . RPAREN

    RPAREN  shift, and go to state 51


State 32

   30 Stmt: RETURN Expr . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 33

   32 Stmt: WRITELN SEMICOLON .

    $default  reduce using rule 32 (Stmt)


State 34

    0 $accept: Program $end .

    $default  accept


State 35

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 36

   14 FunDeclList: FunDecl FunDeclList .

    $default  reduce using rule 14 (FunDeclList)


State 37

   13 FunDeclList: FunDecl .
   14            | FunDecl . FunDeclList

    FUNC  shift, and go to state 5

    $default  reduce using rule 13 (FunDeclList)

    FunDeclList  go to state 36
    FunDecl      go to state 37


State 38

   11 VarDecl: Type ID . SEMICOLON
   12        | Type ID . LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 53
    LBRACKET   shift, and go to state 54


State 39

   27 StmtList: Stmt StmtList .

    $default  reduce using rule 27 (StmtList)


State 40

   29 Stmt: Expr SEMICOLON .

    $default  reduce using rule 29 (Stmt)


State 41

   34 Expr: UnaryOp Expr .

    $default  reduce using rule 34 (Expr)


State 42

   38 MathExpr: ID . BinOp MathExpr
   40         | ID .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 40 (MathExpr)

    BinOp  go to state 59


State 43

   39 MathExpr: NUMBER . BinOp MathExpr
   41         | NUMBER .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 41 (MathExpr)

    BinOp  go to state 60


State 44

   35 Expr: ID EQ MathExpr .

    $default  reduce using rule 35 (Expr)


State 45

   37 Expr: ID LBRACKET NUMBER . RBRACKET EQ Primary

    RBRACKET  shift, and go to state 61


State 46

   45 Primary: ID .

    $default  reduce using rule 45 (Primary)


State 47

   36 Expr: ID LPAREN ParamList . RPAREN

    RPAREN  shift, and go to state 62


State 48

   44 ParamList: Primary . $@2 ParamList

    $default  reduce using rule 43 ($@2)

    $@2  go to state 63


State 49

   31 Stmt: WRITE Expr SEMICOLON .

    $default  reduce using rule 31 (Stmt)


State 50

   16 FunDecl: FUNC Type ID . LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 64


State 51

   48 Primary: LPAREN Expr RPAREN .

    $default  reduce using rule 48 (Primary)


State 52

   30 Stmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 30 (Stmt)


State 53

   11 VarDecl: Type ID SEMICOLON .

    $default  reduce using rule 11 (VarDecl)


State 54

   12 VarDecl: Type ID LBRACKET . NUMBER RBRACKET SEMICOLON

    NUMBER  shift, and go to state 65


State 55

   50 BinOp: PLUS .

    $default  reduce using rule 50 (BinOp)


State 56

   51 BinOp: MINUS .

    $default  reduce using rule 51 (BinOp)


State 57

   52 BinOp: TIMES .

    $default  reduce using rule 52 (BinOp)


State 58

   53 BinOp: DIVIDE .

    $default  reduce using rule 53 (BinOp)


State 59

   38 MathExpr: ID BinOp . MathExpr

    ID      shift, and go to state 42
    NUMBER  shift, and go to state 43

    MathExpr  go to state 66


State 60

   39 MathExpr: NUMBER BinOp . MathExpr

    ID      shift, and go to state 42
    NUMBER  shift, and go to state 43

    MathExpr  go to state 67


State 61

   37 Expr: ID LBRACKET NUMBER RBRACKET . EQ Primary

    EQ  shift, and go to state 68


State 62

   36 Expr: ID LPAREN ParamList RPAREN .

    $default  reduce using rule 36 (Expr)


State 63

   44 ParamList: Primary $@2 . ParamList

    ID         shift, and go to state 46
    NUMBER     shift, and go to state 3
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 42 (ParamList)

    ParamList  go to state 69
    Primary    go to state 48


State 64

   16 FunDecl: FUNC Type ID LPAREN . $@1 ParamDecList RPAREN Block

    $default  reduce using rule 15 ($@1)

    $@1  go to state 70


State 65

   12 VarDecl: Type ID LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 71


State 66

   38 MathExpr: ID BinOp MathExpr .

    $default  reduce using rule 38 (MathExpr)


State 67

   39 MathExpr: NUMBER BinOp MathExpr .

    $default  reduce using rule 39 (MathExpr)


State 68

   37 Expr: ID LBRACKET NUMBER RBRACKET EQ . Primary

    ID         shift, and go to state 46
    NUMBER     shift, and go to state 3
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Primary  go to state 72


State 69

   44 ParamList: Primary $@2 ParamList .

    $default  reduce using rule 44 (ParamList)


State 70

   16 FunDecl: FUNC Type ID LPAREN $@1 . ParamDecList RPAREN Block

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 17 (ParamDecList)

    ParamDecList      go to state 73
    ParamDecListTail  go to state 74
    ParamDecl         go to state 75
    Type              go to state 76


State 71

   12 VarDecl: Type ID LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 72

   37 Expr: ID LBRACKET NUMBER RBRACKET EQ Primary .

    $default  reduce using rule 37 (Expr)


State 73

   16 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList . RPAREN Block

    RPAREN  shift, and go to state 78


State 74

   18 ParamDecList: ParamDecListTail .

    $default  reduce using rule 18 (ParamDecList)


State 75

   19 ParamDecListTail: ParamDecl .
   20                 | ParamDecl . ParamDecListTail

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 19 (ParamDecListTail)

    ParamDecListTail  go to state 79
    ParamDecl         go to state 75
    Type              go to state 76


State 76

   21 ParamDecl: Type . ID

    ID  shift, and go to state 80


State 77

   12 VarDecl: Type ID LBRACKET NUMBER RBRACKET SEMICOLON .

    $default  reduce using rule 12 (VarDecl)


State 78

   16 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN . Block

    LCURLY  shift, and go to state 81

    Block  go to state 82


State 79

   20 ParamDecListTail: ParamDecl ParamDecListTail .

    $default  reduce using rule 20 (ParamDecListTail)


State 80

   21 ParamDecl: Type ID .

    $default  reduce using rule 21 (ParamDecl)


State 81

   22 Block: LCURLY . VarDeclList StmtList RCURLY

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 5 (VarDeclList)

    VarDeclList  go to state 83
    VarDecl      go to state 84
    Type         go to state 20


State 82

   16 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block .

    $default  reduce using rule 16 (FunDecl)


State 83

   22 Block: LCURLY VarDeclList . StmtList RCURLY

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    NUMBER     shift, and go to state 3
    WRITE      shift, and go to state 4
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    StmtList  go to state 85
    Stmt      go to state 22
    Expr      go to state 23
    Primary   go to state 24
    UnaryOp   go to state 25


State 84

    6 VarDeclList: VarDecl . VarDeclList
    7            | VarDecl .

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    ID         reduce using rule 5 (VarDeclList)
    ID         [reduce using rule 7 (VarDeclList)]
    SEMICOLON  reduce using rule 5 (VarDeclList)
    SEMICOLON  [reduce using rule 7 (VarDeclList)]
    NUMBER     reduce using rule 5 (VarDeclList)
    NUMBER     [reduce using rule 7 (VarDeclList)]
    WRITE      reduce using rule 5 (VarDeclList)
    WRITE      [reduce using rule 7 (VarDeclList)]
    MINUS      reduce using rule 5 (VarDeclList)
    MINUS      [reduce using rule 7 (VarDeclList)]
    LPAREN     reduce using rule 5 (VarDeclList)
    LPAREN     [reduce using rule 7 (VarDeclList)]
    RETURN     reduce using rule 5 (VarDeclList)
    RETURN     [reduce using rule 7 (VarDeclList)]
    WRITELN    reduce using rule 5 (VarDeclList)
    WRITELN    [reduce using rule 7 (VarDeclList)]
    CHARACTER  reduce using rule 5 (VarDeclList)
    CHARACTER  [reduce using rule 7 (VarDeclList)]
    $default   reduce using rule 5 (VarDeclList)

    VarDeclList  go to state 86
    VarDecl      go to state 84
    Type         go to state 20


State 85

   22 Block: LCURLY VarDeclList StmtList . RCURLY

    RCURLY  shift, and go to state 87


State 86

    6 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 6 (VarDeclList)


State 87

   22 Block: LCURLY VarDeclList StmtList RCURLY .

    $default  reduce using rule 22 (Block)
