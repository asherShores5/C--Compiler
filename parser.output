Nonterminals useless in grammar

    VarDeclList
    BinOp


Terminals unused in grammar

    DECIMAL


Rules useless in grammar

   53 VarDeclList: %empty
   54            | VarDecl VarDeclList
   55            | VarDecl

   56 BinOp: PLUS
   57      | MINUS
   58      | TIMES
   59      | DIVIDE


State 1 conflicts: 2 reduce/reduce
State 3 conflicts: 2 reduce/reduce
State 19 conflicts: 1 shift/reduce, 2 reduce/reduce
State 22 conflicts: 9 shift/reduce
State 35 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl
    4         | FunDeclList

    5 Decl: VarDecl
    6     | StmtList
    7     | FunDecl

    8 VarDecl: Type ID SEMICOLON
    9        | Type ID LBRACKET INTEGER RBRACKET SEMICOLON

   10 FunDeclList: FunDecl
   11            | FunDecl FunDeclList

   12 $@1: %empty

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   14 ParamDecList: %empty
   15             | ParamDecListTail

   16 ParamDecListTail: ParamDecl
   17                 | ParamDecl ParamDecListTail

   18 ParamDecl: Type ID

   19 Block: LCURLY DeclList RCURLY

   20 Type: INT
   21     | FLOAT
   22     | CHAR

   23 StmtList: Stmt
   24         | Stmt StmtList

   25 Stmt: SEMICOLON
   26     | Expr SEMICOLON
   27     | RETURN Expr SEMICOLON
   28     | WRITE Expr SEMICOLON
   29     | WRITELN SEMICOLON

   30 Expr: Primary
   31     | MathExpr
   32     | UnaryOp Expr
   33     | ID EQ Expr
   34     | ID LPAREN ParamList RPAREN
   35     | ID LBRACKET INTEGER RBRACKET EQ Primary

   36 MathExpr: Trm
   37         | MathExpr MINUS Trm
   38         | MathExpr PLUS Trm

   39 Trm: Factor
   40    | Trm TIMES Factor
   41    | Trm DIVIDE Factor

   42 Factor: ID
   43       | INTEGER
   44       | LPAREN MathExpr RPAREN

   45 ParamList: %empty

   46 $@2: %empty

   47 ParamList: Primary $@2 ParamList

   48 Primary: ID
   49        | INTEGER
   50        | CHARACTER
   51        | LPAREN Expr RPAREN

   52 UnaryOp: MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 8 9 13 18 33 34 35 42 48
    SEMICOLON <string> (259) 8 9 25 26 27 28 29
    EQ <string> (260) 33 35
    INTEGER <number> (261) 9 35 43 49
    DECIMAL <number> (262)
    WRITE <string> (263) 28
    FUNC <string> (264) 13
    PLUS <string> (265) 38
    MINUS <string> (266) 37 52
    TIMES <string> (267) 40
    DIVIDE <string> (268) 41
    LBRACKET <string> (269) 9 35
    RBRACKET <string> (270) 9 35
    LPAREN <string> (271) 13 34 44 51
    RPAREN <string> (272) 13 34 44 51
    LCURLY <string> (273) 19
    RCURLY <string> (274) 19
    INT <string> (275) 20
    CHAR <string> (276) 22
    FLOAT <string> (277) 21
    RETURN <string> (278) 27
    WRITELN <string> (279) 29
    CHARACTER <string> (280) 50


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    Program <ast> (27)
        on left: 1
        on right: 0
    DeclList <ast> (28)
        on left: 2 3 4
        on right: 1 2 19
    Decl <ast> (29)
        on left: 5 6 7
        on right: 2 3
    VarDecl <ast> (30)
        on left: 8 9
        on right: 5
    FunDeclList <ast> (31)
        on left: 10 11
        on right: 4 11
    FunDecl <ast> (32)
        on left: 13
        on right: 7 10 11
    $@1 (33)
        on left: 12
        on right: 13
    ParamDecList <ast> (34)
        on left: 14 15
        on right: 13
    ParamDecListTail <ast> (35)
        on left: 16 17
        on right: 15 17
    ParamDecl <ast> (36)
        on left: 18
        on right: 16 17
    Block <ast> (37)
        on left: 19
        on right: 13
    Type <ast> (38)
        on left: 20 21 22
        on right: 8 9 13 18
    StmtList <ast> (39)
        on left: 23 24
        on right: 6 24
    Stmt <ast> (40)
        on left: 25 26 27 28 29
        on right: 23 24
    Expr <ast> (41)
        on left: 30 31 32 33 34 35
        on right: 26 27 28 32 33 51
    MathExpr <ast> (42)
        on left: 36 37 38
        on right: 31 37 38 44
    Trm <ast> (43)
        on left: 39 40 41
        on right: 36 37 38 40 41
    Factor <ast> (44)
        on left: 42 43 44
        on right: 39 40 41
    ParamList <ast> (45)
        on left: 45 47
        on right: 34 47
    $@2 (46)
        on left: 46
        on right: 47
    Primary <ast> (47)
        on left: 48 49 50 51
        on right: 30 35 47
    UnaryOp <ast> (48)
        on left: 52
        on right: 32


State 0

    0 $accept: . Program $end

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    Program      go to state 14
    DeclList     go to state 15
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    MathExpr     go to state 24
    Trm          go to state 25
    Factor       go to state 26
    Primary      go to state 27
    UnaryOp      go to state 28


State 1

   33 Expr: ID . EQ Expr
   34     | ID . LPAREN ParamList RPAREN
   35     | ID . LBRACKET INTEGER RBRACKET EQ Primary
   42 Factor: ID .
   48 Primary: ID .

    EQ        shift, and go to state 29
    LBRACKET  shift, and go to state 30
    LPAREN    shift, and go to state 31

    SEMICOLON  reduce using rule 42 (Factor)
    SEMICOLON  [reduce using rule 48 (Primary)]
    RPAREN     reduce using rule 42 (Factor)
    RPAREN     [reduce using rule 48 (Primary)]
    $default   reduce using rule 42 (Factor)


State 2

   25 Stmt: SEMICOLON .

    $default  reduce using rule 25 (Stmt)


State 3

   43 Factor: INTEGER .
   49 Primary: INTEGER .

    SEMICOLON  reduce using rule 43 (Factor)
    SEMICOLON  [reduce using rule 49 (Primary)]
    RPAREN     reduce using rule 43 (Factor)
    RPAREN     [reduce using rule 49 (Primary)]
    $default   reduce using rule 43 (Factor)


State 4

   28 Stmt: WRITE . Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 32
    MathExpr  go to state 24
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 5

   13 FunDecl: FUNC . Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    Type  go to state 33


State 6

   52 UnaryOp: MINUS .

    $default  reduce using rule 52 (UnaryOp)


State 7

   44 Factor: LPAREN . MathExpr RPAREN
   51 Primary: LPAREN . Expr RPAREN

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 34
    MathExpr  go to state 35
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 8

   20 Type: INT .

    $default  reduce using rule 20 (Type)


State 9

   22 Type: CHAR .

    $default  reduce using rule 22 (Type)


State 10

   21 Type: FLOAT .

    $default  reduce using rule 21 (Type)


State 11

   27 Stmt: RETURN . Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 36
    MathExpr  go to state 24
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 12

   29 Stmt: WRITELN . SEMICOLON

    SEMICOLON  shift, and go to state 37


State 13

   50 Primary: CHARACTER .

    $default  reduce using rule 50 (Primary)


State 14

    0 $accept: Program . $end

    $end  shift, and go to state 38


State 15

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 16

    2 DeclList: Decl . DeclList
    3         | Decl .

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 39
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    MathExpr     go to state 24
    Trm          go to state 25
    Factor       go to state 26
    Primary      go to state 27
    UnaryOp      go to state 28


State 17

    5 Decl: VarDecl .

    $default  reduce using rule 5 (Decl)


State 18

    4 DeclList: FunDeclList .

    $default  reduce using rule 4 (DeclList)


State 19

    7 Decl: FunDecl .
   10 FunDeclList: FunDecl .
   11            | FunDecl . FunDeclList

    FUNC  shift, and go to state 5

    $end      reduce using rule 7 (Decl)
    $end      [reduce using rule 10 (FunDeclList)]
    FUNC      [reduce using rule 7 (Decl)]
    RCURLY    reduce using rule 7 (Decl)
    RCURLY    [reduce using rule 10 (FunDeclList)]
    $default  reduce using rule 7 (Decl)

    FunDeclList  go to state 40
    FunDecl      go to state 41


State 20

    8 VarDecl: Type . ID SEMICOLON
    9        | Type . ID LBRACKET INTEGER RBRACKET SEMICOLON

    ID  shift, and go to state 42


State 21

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


State 22

   23 StmtList: Stmt .
   24         | Stmt . StmtList

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    WRITE      shift, and go to state 4
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    ID         [reduce using rule 23 (StmtList)]
    SEMICOLON  [reduce using rule 23 (StmtList)]
    INTEGER    [reduce using rule 23 (StmtList)]
    WRITE      [reduce using rule 23 (StmtList)]
    MINUS      [reduce using rule 23 (StmtList)]
    LPAREN     [reduce using rule 23 (StmtList)]
    RETURN     [reduce using rule 23 (StmtList)]
    WRITELN    [reduce using rule 23 (StmtList)]
    CHARACTER  [reduce using rule 23 (StmtList)]
    $default   reduce using rule 23 (StmtList)

    StmtList  go to state 43
    Stmt      go to state 22
    Expr      go to state 23
    MathExpr  go to state 24
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 23

   26 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 24

   31 Expr: MathExpr .
   37 MathExpr: MathExpr . MINUS Trm
   38         | MathExpr . PLUS Trm

    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46

    $default  reduce using rule 31 (Expr)


State 25

   36 MathExpr: Trm .
   40 Trm: Trm . TIMES Factor
   41    | Trm . DIVIDE Factor

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 36 (MathExpr)


State 26

   39 Trm: Factor .

    $default  reduce using rule 39 (Trm)


State 27

   30 Expr: Primary .

    $default  reduce using rule 30 (Expr)


State 28

   32 Expr: UnaryOp . Expr

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 49
    MathExpr  go to state 24
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 29

   33 Expr: ID EQ . Expr

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 50
    MathExpr  go to state 24
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 30

   35 Expr: ID LBRACKET . INTEGER RBRACKET EQ Primary

    INTEGER  shift, and go to state 51


State 31

   34 Expr: ID LPAREN . ParamList RPAREN

    ID         shift, and go to state 52
    INTEGER    shift, and go to state 53
    LPAREN     shift, and go to state 54
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 45 (ParamList)

    ParamList  go to state 55
    Primary    go to state 56


State 32

   28 Stmt: WRITE Expr . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 33

   13 FunDecl: FUNC Type . ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 58


State 34

   51 Primary: LPAREN Expr . RPAREN

    RPAREN  shift, and go to state 59


State 35

   31 Expr: MathExpr .
   37 MathExpr: MathExpr . MINUS Trm
   38         | MathExpr . PLUS Trm
   44 Factor: LPAREN MathExpr . RPAREN

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    RPAREN  shift, and go to state 60

    RPAREN  [reduce using rule 31 (Expr)]


State 36

   27 Stmt: RETURN Expr . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 37

   29 Stmt: WRITELN SEMICOLON .

    $default  reduce using rule 29 (Stmt)


State 38

    0 $accept: Program $end .

    $default  accept


State 39

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 40

   11 FunDeclList: FunDecl FunDeclList .

    $default  reduce using rule 11 (FunDeclList)


State 41

   10 FunDeclList: FunDecl .
   11            | FunDecl . FunDeclList

    FUNC  shift, and go to state 5

    $default  reduce using rule 10 (FunDeclList)

    FunDeclList  go to state 40
    FunDecl      go to state 41


State 42

    8 VarDecl: Type ID . SEMICOLON
    9        | Type ID . LBRACKET INTEGER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 62
    LBRACKET   shift, and go to state 63


State 43

   24 StmtList: Stmt StmtList .

    $default  reduce using rule 24 (StmtList)


State 44

   26 Stmt: Expr SEMICOLON .

    $default  reduce using rule 26 (Stmt)


State 45

   38 MathExpr: MathExpr PLUS . Trm

    ID       shift, and go to state 64
    INTEGER  shift, and go to state 65
    LPAREN   shift, and go to state 66

    Trm     go to state 67
    Factor  go to state 26


State 46

   37 MathExpr: MathExpr MINUS . Trm

    ID       shift, and go to state 64
    INTEGER  shift, and go to state 65
    LPAREN   shift, and go to state 66

    Trm     go to state 68
    Factor  go to state 26


State 47

   40 Trm: Trm TIMES . Factor

    ID       shift, and go to state 64
    INTEGER  shift, and go to state 65
    LPAREN   shift, and go to state 66

    Factor  go to state 69


State 48

   41 Trm: Trm DIVIDE . Factor

    ID       shift, and go to state 64
    INTEGER  shift, and go to state 65
    LPAREN   shift, and go to state 66

    Factor  go to state 70


State 49

   32 Expr: UnaryOp Expr .

    $default  reduce using rule 32 (Expr)


State 50

   33 Expr: ID EQ Expr .

    $default  reduce using rule 33 (Expr)


State 51

   35 Expr: ID LBRACKET INTEGER . RBRACKET EQ Primary

    RBRACKET  shift, and go to state 71


State 52

   48 Primary: ID .

    $default  reduce using rule 48 (Primary)


State 53

   49 Primary: INTEGER .

    $default  reduce using rule 49 (Primary)


State 54

   51 Primary: LPAREN . Expr RPAREN

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    CHARACTER  shift, and go to state 13

    Expr      go to state 34
    MathExpr  go to state 24
    Trm       go to state 25
    Factor    go to state 26
    Primary   go to state 27
    UnaryOp   go to state 28


State 55

   34 Expr: ID LPAREN ParamList . RPAREN

    RPAREN  shift, and go to state 72


State 56

   47 ParamList: Primary . $@2 ParamList

    $default  reduce using rule 46 ($@2)

    $@2  go to state 73


State 57

   28 Stmt: WRITE Expr SEMICOLON .

    $default  reduce using rule 28 (Stmt)


State 58

   13 FunDecl: FUNC Type ID . LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 74


State 59

   51 Primary: LPAREN Expr RPAREN .

    $default  reduce using rule 51 (Primary)


State 60

   44 Factor: LPAREN MathExpr RPAREN .

    $default  reduce using rule 44 (Factor)


State 61

   27 Stmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 27 (Stmt)


State 62

    8 VarDecl: Type ID SEMICOLON .

    $default  reduce using rule 8 (VarDecl)


State 63

    9 VarDecl: Type ID LBRACKET . INTEGER RBRACKET SEMICOLON

    INTEGER  shift, and go to state 75


State 64

   42 Factor: ID .

    $default  reduce using rule 42 (Factor)


State 65

   43 Factor: INTEGER .

    $default  reduce using rule 43 (Factor)


State 66

   44 Factor: LPAREN . MathExpr RPAREN

    ID       shift, and go to state 64
    INTEGER  shift, and go to state 65
    LPAREN   shift, and go to state 66

    MathExpr  go to state 76
    Trm       go to state 25
    Factor    go to state 26


State 67

   38 MathExpr: MathExpr PLUS Trm .
   40 Trm: Trm . TIMES Factor
   41    | Trm . DIVIDE Factor

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 38 (MathExpr)


State 68

   37 MathExpr: MathExpr MINUS Trm .
   40 Trm: Trm . TIMES Factor
   41    | Trm . DIVIDE Factor

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 37 (MathExpr)


State 69

   40 Trm: Trm TIMES Factor .

    $default  reduce using rule 40 (Trm)


State 70

   41 Trm: Trm DIVIDE Factor .

    $default  reduce using rule 41 (Trm)


State 71

   35 Expr: ID LBRACKET INTEGER RBRACKET . EQ Primary

    EQ  shift, and go to state 77


State 72

   34 Expr: ID LPAREN ParamList RPAREN .

    $default  reduce using rule 34 (Expr)


State 73

   47 ParamList: Primary $@2 . ParamList

    ID         shift, and go to state 52
    INTEGER    shift, and go to state 53
    LPAREN     shift, and go to state 54
    CHARACTER  shift, and go to state 13

    $default  reduce using rule 45 (ParamList)

    ParamList  go to state 78
    Primary    go to state 56


State 74

   13 FunDecl: FUNC Type ID LPAREN . $@1 ParamDecList RPAREN Block

    $default  reduce using rule 12 ($@1)

    $@1  go to state 79


State 75

    9 VarDecl: Type ID LBRACKET INTEGER . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 80


State 76

   37 MathExpr: MathExpr . MINUS Trm
   38         | MathExpr . PLUS Trm
   44 Factor: LPAREN MathExpr . RPAREN

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    RPAREN  shift, and go to state 60


State 77

   35 Expr: ID LBRACKET INTEGER RBRACKET EQ . Primary

    ID         shift, and go to state 52
    INTEGER    shift, and go to state 53
    LPAREN     shift, and go to state 54
    CHARACTER  shift, and go to state 13

    Primary  go to state 81


State 78

   47 ParamList: Primary $@2 ParamList .

    $default  reduce using rule 47 (ParamList)


State 79

   13 FunDecl: FUNC Type ID LPAREN $@1 . ParamDecList RPAREN Block

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 14 (ParamDecList)

    ParamDecList      go to state 82
    ParamDecListTail  go to state 83
    ParamDecl         go to state 84
    Type              go to state 85


State 80

    9 VarDecl: Type ID LBRACKET INTEGER RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 81

   35 Expr: ID LBRACKET INTEGER RBRACKET EQ Primary .

    $default  reduce using rule 35 (Expr)


State 82

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList . RPAREN Block

    RPAREN  shift, and go to state 87


State 83

   15 ParamDecList: ParamDecListTail .

    $default  reduce using rule 15 (ParamDecList)


State 84

   16 ParamDecListTail: ParamDecl .
   17                 | ParamDecl . ParamDecListTail

    INT    shift, and go to state 8
    CHAR   shift, and go to state 9
    FLOAT  shift, and go to state 10

    $default  reduce using rule 16 (ParamDecListTail)

    ParamDecListTail  go to state 88
    ParamDecl         go to state 84
    Type              go to state 85


State 85

   18 ParamDecl: Type . ID

    ID  shift, and go to state 89


State 86

    9 VarDecl: Type ID LBRACKET INTEGER RBRACKET SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 87

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN . Block

    LCURLY  shift, and go to state 90

    Block  go to state 91


State 88

   17 ParamDecListTail: ParamDecl ParamDecListTail .

    $default  reduce using rule 17 (ParamDecListTail)


State 89

   18 ParamDecl: Type ID .

    $default  reduce using rule 18 (ParamDecl)


State 90

   19 Block: LCURLY . DeclList RCURLY

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    WRITE      shift, and go to state 4
    FUNC       shift, and go to state 5
    MINUS      shift, and go to state 6
    LPAREN     shift, and go to state 7
    INT        shift, and go to state 8
    CHAR       shift, and go to state 9
    FLOAT      shift, and go to state 10
    RETURN     shift, and go to state 11
    WRITELN    shift, and go to state 12
    CHARACTER  shift, and go to state 13

    DeclList     go to state 92
    Decl         go to state 16
    VarDecl      go to state 17
    FunDeclList  go to state 18
    FunDecl      go to state 19
    Type         go to state 20
    StmtList     go to state 21
    Stmt         go to state 22
    Expr         go to state 23
    MathExpr     go to state 24
    Trm          go to state 25
    Factor       go to state 26
    Primary      go to state 27
    UnaryOp      go to state 28


State 91

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block .

    $default  reduce using rule 13 (FunDecl)


State 92

   19 Block: LCURLY DeclList . RCURLY

    RCURLY  shift, and go to state 93


State 93

   19 Block: LCURLY DeclList RCURLY .

    $default  reduce using rule 19 (Block)
