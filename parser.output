Nonterminals useless in grammar

    VarDeclList
    BinOp


Rules useless in grammar

   55 VarDeclList: %empty
   56            | VarDecl VarDeclList
   57            | VarDecl

   58 BinOp: PLUS
   59      | MINUS
   60      | TIMES
   61      | DIVIDE


State 1 conflicts: 1 reduce/reduce
State 3 conflicts: 1 reduce/reduce
State 20 conflicts: 1 shift/reduce, 2 reduce/reduce
State 23 conflicts: 10 shift/reduce
State 53 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl
    4         | FunDeclList

    5 Decl: VarDecl
    6     | StmtList
    7     | FunDecl

    8 VarDecl: Type ID SEMICOLON
    9        | Type ID LBRACKET INTEGER RBRACKET SEMICOLON

   10 FunDeclList: FunDecl
   11            | FunDecl FunDeclList

   12 $@1: %empty

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   14 ParamDecList: %empty
   15             | ParamDecListTail

   16 ParamDecListTail: ParamDecl
   17                 | ParamDecl ParamDecListTail

   18 ParamDecl: Type ID

   19 Block: LCURLY DeclList RCURLY

   20 Type: INT
   21     | FLOAT
   22     | CHAR

   23 StmtList: Stmt
   24         | Stmt StmtList

   25 Stmt: SEMICOLON
   26     | Expr SEMICOLON
   27     | RETURN Expr SEMICOLON
   28     | WRITE Expr SEMICOLON
   29     | WRITELN SEMICOLON

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ Primary
   31          | ID EQ ID LBRACKET INTEGER RBRACKET

   32 Expr: Primary
   33     | MathExpr
   34     | ArrayExpr
   35     | UnaryOp Expr
   36     | ID EQ Expr
   37     | ID LPAREN ParamList RPAREN

   38 MathExpr: Trm
   39         | MathExpr MINUS Trm
   40         | MathExpr PLUS Trm

   41 Trm: Factor
   42    | Trm TIMES Factor
   43    | Trm DIVIDE Factor

   44 Factor: ID
   45       | INTEGER
   46       | LPAREN MathExpr RPAREN

   47 ParamList: %empty

   48 $@2: %empty

   49 ParamList: Primary $@2 ParamList

   50 Primary: ID
   51        | DECIMAL
   52        | INTEGER
   53        | CHARACTER

   54 UnaryOp: MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 8 9 13 18 30 31 36 37 44 50
    SEMICOLON <string> (259) 8 9 25 26 27 28 29
    EQ <string> (260) 30 31 36
    INTEGER <number> (261) 9 30 31 45 52
    DECIMAL <floatValue> (262) 51
    WRITE <string> (263) 28
    FUNC <string> (264) 13
    PLUS <string> (265) 40
    MINUS <string> (266) 39 54
    TIMES <string> (267) 42
    DIVIDE <string> (268) 43
    LBRACKET <string> (269) 9 30 31
    RBRACKET <string> (270) 9 30 31
    LPAREN <string> (271) 13 37 46
    RPAREN <string> (272) 13 37 46
    LCURLY <string> (273) 19
    RCURLY <string> (274) 19
    INT <string> (275) 20
    CHAR <string> (276) 22
    FLOAT <string> (277) 21
    RETURN <string> (278) 27
    WRITELN <string> (279) 29
    CHARACTER <string> (280) 53


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    Program <ast> (27)
        on left: 1
        on right: 0
    DeclList <ast> (28)
        on left: 2 3 4
        on right: 1 2 19
    Decl <ast> (29)
        on left: 5 6 7
        on right: 2 3
    VarDecl <ast> (30)
        on left: 8 9
        on right: 5
    FunDeclList <ast> (31)
        on left: 10 11
        on right: 4 11
    FunDecl <ast> (32)
        on left: 13
        on right: 7 10 11
    $@1 (33)
        on left: 12
        on right: 13
    ParamDecList <ast> (34)
        on left: 14 15
        on right: 13
    ParamDecListTail <ast> (35)
        on left: 16 17
        on right: 15 17
    ParamDecl <ast> (36)
        on left: 18
        on right: 16 17
    Block <ast> (37)
        on left: 19
        on right: 13
    Type <ast> (38)
        on left: 20 21 22
        on right: 8 9 13 18
    StmtList <ast> (39)
        on left: 23 24
        on right: 6 24
    Stmt <ast> (40)
        on left: 25 26 27 28 29
        on right: 23 24
    ArrayExpr <ast> (41)
        on left: 30 31
        on right: 34
    Expr <ast> (42)
        on left: 32 33 34 35 36 37
        on right: 26 27 28 35 36
    MathExpr <ast> (43)
        on left: 38 39 40
        on right: 33 39 40 46
    Trm <ast> (44)
        on left: 41 42 43
        on right: 38 39 40 42 43
    Factor <ast> (45)
        on left: 44 45 46
        on right: 41 42 43
    ParamList <ast> (46)
        on left: 47 49
        on right: 37 49
    $@2 (47)
        on left: 48
        on right: 49
    Primary <ast> (48)
        on left: 50 51 52 53
        on right: 30 32 49
    UnaryOp <ast> (49)
        on left: 54
        on right: 35


State 0

    0 $accept: . Program $end

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    FUNC       shift, and go to state 6
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    INT        shift, and go to state 9
    CHAR       shift, and go to state 10
    FLOAT      shift, and go to state 11
    RETURN     shift, and go to state 12
    WRITELN    shift, and go to state 13
    CHARACTER  shift, and go to state 14

    Program      go to state 15
    DeclList     go to state 16
    Decl         go to state 17
    VarDecl      go to state 18
    FunDeclList  go to state 19
    FunDecl      go to state 20
    Type         go to state 21
    StmtList     go to state 22
    Stmt         go to state 23
    ArrayExpr    go to state 24
    Expr         go to state 25
    MathExpr     go to state 26
    Trm          go to state 27
    Factor       go to state 28
    Primary      go to state 29
    UnaryOp      go to state 30


State 1

   30 ArrayExpr: ID . LBRACKET INTEGER RBRACKET EQ Primary
   31          | ID . EQ ID LBRACKET INTEGER RBRACKET
   36 Expr: ID . EQ Expr
   37     | ID . LPAREN ParamList RPAREN
   44 Factor: ID .
   50 Primary: ID .

    EQ        shift, and go to state 31
    LBRACKET  shift, and go to state 32
    LPAREN    shift, and go to state 33

    SEMICOLON  reduce using rule 44 (Factor)
    SEMICOLON  [reduce using rule 50 (Primary)]
    $default   reduce using rule 44 (Factor)


State 2

   25 Stmt: SEMICOLON .

    $default  reduce using rule 25 (Stmt)


State 3

   45 Factor: INTEGER .
   52 Primary: INTEGER .

    SEMICOLON  reduce using rule 45 (Factor)
    SEMICOLON  [reduce using rule 52 (Primary)]
    $default   reduce using rule 45 (Factor)


State 4

   51 Primary: DECIMAL .

    $default  reduce using rule 51 (Primary)


State 5

   28 Stmt: WRITE . Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    CHARACTER  shift, and go to state 14

    ArrayExpr  go to state 24
    Expr       go to state 34
    MathExpr   go to state 26
    Trm        go to state 27
    Factor     go to state 28
    Primary    go to state 29
    UnaryOp    go to state 30


State 6

   13 FunDecl: FUNC . Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    FLOAT  shift, and go to state 11

    Type  go to state 35


State 7

   54 UnaryOp: MINUS .

    $default  reduce using rule 54 (UnaryOp)


State 8

   46 Factor: LPAREN . MathExpr RPAREN

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    LPAREN   shift, and go to state 8

    MathExpr  go to state 38
    Trm       go to state 27
    Factor    go to state 28


State 9

   20 Type: INT .

    $default  reduce using rule 20 (Type)


State 10

   22 Type: CHAR .

    $default  reduce using rule 22 (Type)


State 11

   21 Type: FLOAT .

    $default  reduce using rule 21 (Type)


State 12

   27 Stmt: RETURN . Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    CHARACTER  shift, and go to state 14

    ArrayExpr  go to state 24
    Expr       go to state 39
    MathExpr   go to state 26
    Trm        go to state 27
    Factor     go to state 28
    Primary    go to state 29
    UnaryOp    go to state 30


State 13

   29 Stmt: WRITELN . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 14

   53 Primary: CHARACTER .

    $default  reduce using rule 53 (Primary)


State 15

    0 $accept: Program . $end

    $end  shift, and go to state 41


State 16

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 17

    2 DeclList: Decl . DeclList
    3         | Decl .

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    FUNC       shift, and go to state 6
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    INT        shift, and go to state 9
    CHAR       shift, and go to state 10
    FLOAT      shift, and go to state 11
    RETURN     shift, and go to state 12
    WRITELN    shift, and go to state 13
    CHARACTER  shift, and go to state 14

    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 42
    Decl         go to state 17
    VarDecl      go to state 18
    FunDeclList  go to state 19
    FunDecl      go to state 20
    Type         go to state 21
    StmtList     go to state 22
    Stmt         go to state 23
    ArrayExpr    go to state 24
    Expr         go to state 25
    MathExpr     go to state 26
    Trm          go to state 27
    Factor       go to state 28
    Primary      go to state 29
    UnaryOp      go to state 30


State 18

    5 Decl: VarDecl .

    $default  reduce using rule 5 (Decl)


State 19

    4 DeclList: FunDeclList .

    $default  reduce using rule 4 (DeclList)


State 20

    7 Decl: FunDecl .
   10 FunDeclList: FunDecl .
   11            | FunDecl . FunDeclList

    FUNC  shift, and go to state 6

    $end      reduce using rule 7 (Decl)
    $end      [reduce using rule 10 (FunDeclList)]
    FUNC      [reduce using rule 7 (Decl)]
    RCURLY    reduce using rule 7 (Decl)
    RCURLY    [reduce using rule 10 (FunDeclList)]
    $default  reduce using rule 7 (Decl)

    FunDeclList  go to state 43
    FunDecl      go to state 44


State 21

    8 VarDecl: Type . ID SEMICOLON
    9        | Type . ID LBRACKET INTEGER RBRACKET SEMICOLON

    ID  shift, and go to state 45


State 22

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


State 23

   23 StmtList: Stmt .
   24         | Stmt . StmtList

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    RETURN     shift, and go to state 12
    WRITELN    shift, and go to state 13
    CHARACTER  shift, and go to state 14

    ID         [reduce using rule 23 (StmtList)]
    SEMICOLON  [reduce using rule 23 (StmtList)]
    INTEGER    [reduce using rule 23 (StmtList)]
    DECIMAL    [reduce using rule 23 (StmtList)]
    WRITE      [reduce using rule 23 (StmtList)]
    MINUS      [reduce using rule 23 (StmtList)]
    LPAREN     [reduce using rule 23 (StmtList)]
    RETURN     [reduce using rule 23 (StmtList)]
    WRITELN    [reduce using rule 23 (StmtList)]
    CHARACTER  [reduce using rule 23 (StmtList)]
    $default   reduce using rule 23 (StmtList)

    StmtList   go to state 46
    Stmt       go to state 23
    ArrayExpr  go to state 24
    Expr       go to state 25
    MathExpr   go to state 26
    Trm        go to state 27
    Factor     go to state 28
    Primary    go to state 29
    UnaryOp    go to state 30


State 24

   34 Expr: ArrayExpr .

    $default  reduce using rule 34 (Expr)


State 25

   26 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 26

   33 Expr: MathExpr .
   39 MathExpr: MathExpr . MINUS Trm
   40         | MathExpr . PLUS Trm

    PLUS   shift, and go to state 48
    MINUS  shift, and go to state 49

    $default  reduce using rule 33 (Expr)


State 27

   38 MathExpr: Trm .
   42 Trm: Trm . TIMES Factor
   43    | Trm . DIVIDE Factor

    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 38 (MathExpr)


State 28

   41 Trm: Factor .

    $default  reduce using rule 41 (Trm)


State 29

   32 Expr: Primary .

    $default  reduce using rule 32 (Expr)


State 30

   35 Expr: UnaryOp . Expr

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    CHARACTER  shift, and go to state 14

    ArrayExpr  go to state 24
    Expr       go to state 52
    MathExpr   go to state 26
    Trm        go to state 27
    Factor     go to state 28
    Primary    go to state 29
    UnaryOp    go to state 30


State 31

   31 ArrayExpr: ID EQ . ID LBRACKET INTEGER RBRACKET
   36 Expr: ID EQ . Expr

    ID         shift, and go to state 53
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    CHARACTER  shift, and go to state 14

    ArrayExpr  go to state 24
    Expr       go to state 54
    MathExpr   go to state 26
    Trm        go to state 27
    Factor     go to state 28
    Primary    go to state 29
    UnaryOp    go to state 30


State 32

   30 ArrayExpr: ID LBRACKET . INTEGER RBRACKET EQ Primary

    INTEGER  shift, and go to state 55


State 33

   37 Expr: ID LPAREN . ParamList RPAREN

    ID         shift, and go to state 56
    INTEGER    shift, and go to state 57
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 14

    $default  reduce using rule 47 (ParamList)

    ParamList  go to state 58
    Primary    go to state 59


State 34

   28 Stmt: WRITE Expr . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 35

   13 FunDecl: FUNC Type . ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 61


State 36

   44 Factor: ID .

    $default  reduce using rule 44 (Factor)


State 37

   45 Factor: INTEGER .

    $default  reduce using rule 45 (Factor)


State 38

   39 MathExpr: MathExpr . MINUS Trm
   40         | MathExpr . PLUS Trm
   46 Factor: LPAREN MathExpr . RPAREN

    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    RPAREN  shift, and go to state 62


State 39

   27 Stmt: RETURN Expr . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 40

   29 Stmt: WRITELN SEMICOLON .

    $default  reduce using rule 29 (Stmt)


State 41

    0 $accept: Program $end .

    $default  accept


State 42

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 43

   11 FunDeclList: FunDecl FunDeclList .

    $default  reduce using rule 11 (FunDeclList)


State 44

   10 FunDeclList: FunDecl .
   11            | FunDecl . FunDeclList

    FUNC  shift, and go to state 6

    $default  reduce using rule 10 (FunDeclList)

    FunDeclList  go to state 43
    FunDecl      go to state 44


State 45

    8 VarDecl: Type ID . SEMICOLON
    9        | Type ID . LBRACKET INTEGER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 64
    LBRACKET   shift, and go to state 65


State 46

   24 StmtList: Stmt StmtList .

    $default  reduce using rule 24 (StmtList)


State 47

   26 Stmt: Expr SEMICOLON .

    $default  reduce using rule 26 (Stmt)


State 48

   40 MathExpr: MathExpr PLUS . Trm

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    LPAREN   shift, and go to state 8

    Trm     go to state 66
    Factor  go to state 28


State 49

   39 MathExpr: MathExpr MINUS . Trm

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    LPAREN   shift, and go to state 8

    Trm     go to state 67
    Factor  go to state 28


State 50

   42 Trm: Trm TIMES . Factor

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    LPAREN   shift, and go to state 8

    Factor  go to state 68


State 51

   43 Trm: Trm DIVIDE . Factor

    ID       shift, and go to state 36
    INTEGER  shift, and go to state 37
    LPAREN   shift, and go to state 8

    Factor  go to state 69


State 52

   35 Expr: UnaryOp Expr .

    $default  reduce using rule 35 (Expr)


State 53

   30 ArrayExpr: ID . LBRACKET INTEGER RBRACKET EQ Primary
   31          | ID . EQ ID LBRACKET INTEGER RBRACKET
   31          | ID EQ ID . LBRACKET INTEGER RBRACKET
   36 Expr: ID . EQ Expr
   37     | ID . LPAREN ParamList RPAREN
   44 Factor: ID .
   50 Primary: ID .

    EQ        shift, and go to state 31
    LBRACKET  shift, and go to state 70
    LPAREN    shift, and go to state 33

    SEMICOLON  reduce using rule 44 (Factor)
    SEMICOLON  [reduce using rule 50 (Primary)]
    $default   reduce using rule 44 (Factor)


State 54

   36 Expr: ID EQ Expr .

    $default  reduce using rule 36 (Expr)


State 55

   30 ArrayExpr: ID LBRACKET INTEGER . RBRACKET EQ Primary

    RBRACKET  shift, and go to state 71


State 56

   50 Primary: ID .

    $default  reduce using rule 50 (Primary)


State 57

   52 Primary: INTEGER .

    $default  reduce using rule 52 (Primary)


State 58

   37 Expr: ID LPAREN ParamList . RPAREN

    RPAREN  shift, and go to state 72


State 59

   49 ParamList: Primary . $@2 ParamList

    $default  reduce using rule 48 ($@2)

    $@2  go to state 73


State 60

   28 Stmt: WRITE Expr SEMICOLON .

    $default  reduce using rule 28 (Stmt)


State 61

   13 FunDecl: FUNC Type ID . LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 74


State 62

   46 Factor: LPAREN MathExpr RPAREN .

    $default  reduce using rule 46 (Factor)


State 63

   27 Stmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 27 (Stmt)


State 64

    8 VarDecl: Type ID SEMICOLON .

    $default  reduce using rule 8 (VarDecl)


State 65

    9 VarDecl: Type ID LBRACKET . INTEGER RBRACKET SEMICOLON

    INTEGER  shift, and go to state 75


State 66

   40 MathExpr: MathExpr PLUS Trm .
   42 Trm: Trm . TIMES Factor
   43    | Trm . DIVIDE Factor

    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 40 (MathExpr)


State 67

   39 MathExpr: MathExpr MINUS Trm .
   42 Trm: Trm . TIMES Factor
   43    | Trm . DIVIDE Factor

    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 39 (MathExpr)


State 68

   42 Trm: Trm TIMES Factor .

    $default  reduce using rule 42 (Trm)


State 69

   43 Trm: Trm DIVIDE Factor .

    $default  reduce using rule 43 (Trm)


State 70

   30 ArrayExpr: ID LBRACKET . INTEGER RBRACKET EQ Primary
   31          | ID EQ ID LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 76


State 71

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET . EQ Primary

    EQ  shift, and go to state 77


State 72

   37 Expr: ID LPAREN ParamList RPAREN .

    $default  reduce using rule 37 (Expr)


State 73

   49 ParamList: Primary $@2 . ParamList

    ID         shift, and go to state 56
    INTEGER    shift, and go to state 57
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 14

    $default  reduce using rule 47 (ParamList)

    ParamList  go to state 78
    Primary    go to state 59


State 74

   13 FunDecl: FUNC Type ID LPAREN . $@1 ParamDecList RPAREN Block

    $default  reduce using rule 12 ($@1)

    $@1  go to state 79


State 75

    9 VarDecl: Type ID LBRACKET INTEGER . RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 80


State 76

   30 ArrayExpr: ID LBRACKET INTEGER . RBRACKET EQ Primary
   31          | ID EQ ID LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 81


State 77

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ . Primary

    ID         shift, and go to state 56
    INTEGER    shift, and go to state 57
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 14

    Primary  go to state 82


State 78

   49 ParamList: Primary $@2 ParamList .

    $default  reduce using rule 49 (ParamList)


State 79

   13 FunDecl: FUNC Type ID LPAREN $@1 . ParamDecList RPAREN Block

    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    FLOAT  shift, and go to state 11

    $default  reduce using rule 14 (ParamDecList)

    ParamDecList      go to state 83
    ParamDecListTail  go to state 84
    ParamDecl         go to state 85
    Type              go to state 86


State 80

    9 VarDecl: Type ID LBRACKET INTEGER RBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 81

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET . EQ Primary
   31          | ID EQ ID LBRACKET INTEGER RBRACKET .

    EQ  shift, and go to state 77

    $default  reduce using rule 31 (ArrayExpr)


State 82

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ Primary .

    $default  reduce using rule 30 (ArrayExpr)


State 83

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList . RPAREN Block

    RPAREN  shift, and go to state 88


State 84

   15 ParamDecList: ParamDecListTail .

    $default  reduce using rule 15 (ParamDecList)


State 85

   16 ParamDecListTail: ParamDecl .
   17                 | ParamDecl . ParamDecListTail

    INT    shift, and go to state 9
    CHAR   shift, and go to state 10
    FLOAT  shift, and go to state 11

    $default  reduce using rule 16 (ParamDecListTail)

    ParamDecListTail  go to state 89
    ParamDecl         go to state 85
    Type              go to state 86


State 86

   18 ParamDecl: Type . ID

    ID  shift, and go to state 90


State 87

    9 VarDecl: Type ID LBRACKET INTEGER RBRACKET SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 88

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN . Block

    LCURLY  shift, and go to state 91

    Block  go to state 92


State 89

   17 ParamDecListTail: ParamDecl ParamDecListTail .

    $default  reduce using rule 17 (ParamDecListTail)


State 90

   18 ParamDecl: Type ID .

    $default  reduce using rule 18 (ParamDecl)


State 91

   19 Block: LCURLY . DeclList RCURLY

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    FUNC       shift, and go to state 6
    MINUS      shift, and go to state 7
    LPAREN     shift, and go to state 8
    INT        shift, and go to state 9
    CHAR       shift, and go to state 10
    FLOAT      shift, and go to state 11
    RETURN     shift, and go to state 12
    WRITELN    shift, and go to state 13
    CHARACTER  shift, and go to state 14

    DeclList     go to state 93
    Decl         go to state 17
    VarDecl      go to state 18
    FunDeclList  go to state 19
    FunDecl      go to state 20
    Type         go to state 21
    StmtList     go to state 22
    Stmt         go to state 23
    ArrayExpr    go to state 24
    Expr         go to state 25
    MathExpr     go to state 26
    Trm          go to state 27
    Factor       go to state 28
    Primary      go to state 29
    UnaryOp      go to state 30


State 92

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block .

    $default  reduce using rule 13 (FunDecl)


State 93

   19 Block: LCURLY DeclList . RCURLY

    RCURLY  shift, and go to state 94


State 94

   19 Block: LCURLY DeclList RCURLY .

    $default  reduce using rule 19 (Block)
