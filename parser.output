Nonterminals useless in grammar

    BinOp


Terminals unused in grammar

    PLUS
    TIMES
    DIVIDE


Rules useless in grammar

   40 BinOp: PLUS
   41      | MINUS
   42      | TIMES
   43      | DIVIDE


Rules useless in parser due to conflicts

   26 Stmt: RETURN Expr SEMICOLON


State 66 conflicts: 10 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FunDeclList

    2 VarDeclList: ε
    3            | VarDecl VarDeclList

    4 VarDecl: Type ID SEMICOLON
    5        | Type ID LBRACKET NUMBER RBRACKET SEMICOLON

    6 FunDeclList: FunDecl
    7            | FunDecl FunDeclList

    8 $@1: ε

    9 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   10 ParamDecList: ε
   11             | ParamDecListTail

   12 ParamDecListTail: ParamDecl
   13                 | ParamDecl ParamDecListTail

   14 ParamDecl: Type ID

   15 Block: LCURLY VarDeclList StmtList RCURLY

   16 Type: INT
   17     | FLOAT
   18     | CHAR

   19 StmtList: Stmt
   20         | Stmt StmtList

   21 Stmt: SEMICOLON
   22     | Expr SEMICOLON
   23     | RETURN Expr SEMICOLON
   24     | WRITE Expr SEMICOLON
   25     | WRITELN SEMICOLON
   26     | RETURN Expr SEMICOLON

   27 Expr: Primary
   28     | UnaryOp Expr
   29     | ID EQ Expr
   30     | ID LPAREN ParamList RPAREN
   31     | ID LBRACKET Expr RBRACKET EQ Expr

   32 ParamList: ε

   33 $@2: ε

   34 ParamList: Primary $@2 ParamList

   35 Primary: ID
   36        | NUMBER
   37        | CHARACTER
   38        | LPAREN Expr RPAREN

   39 UnaryOp: MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 4 5 9 14 29 30 31 35
    SEMICOLON <string> (259) 4 5 21 22 23 24 25 26
    EQ <string> (260) 29 31
    PLUS <string> (261)
    NUMBER <number> (262) 5 36
    WRITE <string> (263) 24
    FUNC <string> (264) 9
    MINUS <string> (265) 39
    TIMES <string> (266)
    DIVIDE <string> (267)
    LBRACKET <string> (268) 5 31
    RBRACKET <string> (269) 5 31
    LPAREN <string> (270) 9 30 38
    RPAREN <string> (271) 9 30 38
    LCURLY <string> (272) 15
    RCURLY <string> (273) 15
    INT <string> (274) 16
    CHAR <string> (275) 18
    FLOAT <string> (276) 17
    RETURN <string> (277) 23 26
    WRITELN <string> (278) 25
    CHARACTER <string> (279) 37


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    Program <ast> (26)
        on left: 1
        on right: 0
    VarDeclList <ast> (27)
        on left: 2 3
        on right: 1 3 15
    VarDecl <ast> (28)
        on left: 4 5
        on right: 3
    FunDeclList <ast> (29)
        on left: 6 7
        on right: 1 7
    FunDecl <ast> (30)
        on left: 9
        on right: 6 7
    $@1 (31)
        on left: 8
        on right: 9
    ParamDecList <ast> (32)
        on left: 10 11
        on right: 9
    ParamDecListTail <ast> (33)
        on left: 12 13
        on right: 11 13
    ParamDecl <ast> (34)
        on left: 14
        on right: 12 13
    Block <ast> (35)
        on left: 15
        on right: 9
    Type <ast> (36)
        on left: 16 17 18
        on right: 4 5 9 14
    StmtList <ast> (37)
        on left: 19 20
        on right: 15 20
    Stmt <ast> (38)
        on left: 21 22 23 24 25 26
        on right: 19 20
    Expr <ast> (39)
        on left: 27 28 29 30 31
        on right: 22 23 24 26 28 29 31 38
    ParamList <ast> (40)
        on left: 32 34
        on right: 30 34
    $@2 (41)
        on left: 33
        on right: 34
    Primary <ast> (42)
        on left: 35 36 37 38
        on right: 27 34
    UnaryOp <ast> (43)
        on left: 39
        on right: 28


State 0

    0 $accept: • Program $end

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (VarDeclList)

    Program      go to state 4
    VarDeclList  go to state 5
    VarDecl      go to state 6
    Type         go to state 7


State 1

   16 Type: INT •

    $default  reduce using rule 16 (Type)


State 2

   18 Type: CHAR •

    $default  reduce using rule 18 (Type)


State 3

   17 Type: FLOAT •

    $default  reduce using rule 17 (Type)


State 4

    0 $accept: Program • $end

    $end  shift, and go to state 8


State 5

    1 Program: VarDeclList • FunDeclList

    FUNC  shift, and go to state 9

    FunDeclList  go to state 10
    FunDecl      go to state 11


State 6

    3 VarDeclList: VarDecl • VarDeclList

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (VarDeclList)

    VarDeclList  go to state 12
    VarDecl      go to state 6
    Type         go to state 7


State 7

    4 VarDecl: Type • ID SEMICOLON
    5        | Type • ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 13


State 8

    0 $accept: Program $end •

    $default  accept


State 9

    9 FunDecl: FUNC • Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    Type  go to state 14


State 10

    1 Program: VarDeclList FunDeclList •

    $default  reduce using rule 1 (Program)


State 11

    6 FunDeclList: FunDecl •
    7            | FunDecl • FunDeclList

    FUNC  shift, and go to state 9

    $default  reduce using rule 6 (FunDeclList)

    FunDeclList  go to state 15
    FunDecl      go to state 11


State 12

    3 VarDeclList: VarDecl VarDeclList •

    $default  reduce using rule 3 (VarDeclList)


State 13

    4 VarDecl: Type ID • SEMICOLON
    5        | Type ID • LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 16
    LBRACKET   shift, and go to state 17


State 14

    9 FunDecl: FUNC Type • ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 18


State 15

    7 FunDeclList: FunDecl FunDeclList •

    $default  reduce using rule 7 (FunDeclList)


State 16

    4 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 4 (VarDecl)


State 17

    5 VarDecl: Type ID LBRACKET • NUMBER RBRACKET SEMICOLON

    NUMBER  shift, and go to state 19


State 18

    9 FunDecl: FUNC Type ID • LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 20


State 19

    5 VarDecl: Type ID LBRACKET NUMBER • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 21


State 20

    9 FunDecl: FUNC Type ID LPAREN • $@1 ParamDecList RPAREN Block

    $default  reduce using rule 8 ($@1)

    $@1  go to state 22


State 21

    5 VarDecl: Type ID LBRACKET NUMBER RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 23


State 22

    9 FunDecl: FUNC Type ID LPAREN $@1 • ParamDecList RPAREN Block

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    $default  reduce using rule 10 (ParamDecList)

    ParamDecList      go to state 24
    ParamDecListTail  go to state 25
    ParamDecl         go to state 26
    Type              go to state 27


State 23

    5 VarDecl: Type ID LBRACKET NUMBER RBRACKET SEMICOLON •

    $default  reduce using rule 5 (VarDecl)


State 24

    9 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList • RPAREN Block

    RPAREN  shift, and go to state 28


State 25

   11 ParamDecList: ParamDecListTail •

    $default  reduce using rule 11 (ParamDecList)


State 26

   12 ParamDecListTail: ParamDecl •
   13                 | ParamDecl • ParamDecListTail

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    $default  reduce using rule 12 (ParamDecListTail)

    ParamDecListTail  go to state 29
    ParamDecl         go to state 26
    Type              go to state 27


State 27

   14 ParamDecl: Type • ID

    ID  shift, and go to state 30


State 28

    9 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN • Block

    LCURLY  shift, and go to state 31

    Block  go to state 32


State 29

   13 ParamDecListTail: ParamDecl ParamDecListTail •

    $default  reduce using rule 13 (ParamDecListTail)


State 30

   14 ParamDecl: Type ID •

    $default  reduce using rule 14 (ParamDecl)


State 31

   15 Block: LCURLY • VarDeclList StmtList RCURLY

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (VarDeclList)

    VarDeclList  go to state 33
    VarDecl      go to state 6
    Type         go to state 7


State 32

    9 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block •

    $default  reduce using rule 9 (FunDecl)


State 33

   15 Block: LCURLY VarDeclList • StmtList RCURLY

    ID         shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    NUMBER     shift, and go to state 36
    WRITE      shift, and go to state 37
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    RETURN     shift, and go to state 40
    WRITELN    shift, and go to state 41
    CHARACTER  shift, and go to state 42

    StmtList  go to state 43
    Stmt      go to state 44
    Expr      go to state 45
    Primary   go to state 46
    UnaryOp   go to state 47


State 34

   29 Expr: ID • EQ Expr
   30     | ID • LPAREN ParamList RPAREN
   31     | ID • LBRACKET Expr RBRACKET EQ Expr
   35 Primary: ID •

    EQ        shift, and go to state 48
    LBRACKET  shift, and go to state 49
    LPAREN    shift, and go to state 50

    $default  reduce using rule 35 (Primary)


State 35

   21 Stmt: SEMICOLON •

    $default  reduce using rule 21 (Stmt)


State 36

   36 Primary: NUMBER •

    $default  reduce using rule 36 (Primary)


State 37

   24 Stmt: WRITE • Expr SEMICOLON

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 51
    Primary  go to state 46
    UnaryOp  go to state 47


State 38

   39 UnaryOp: MINUS •

    $default  reduce using rule 39 (UnaryOp)


State 39

   38 Primary: LPAREN • Expr RPAREN

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 52
    Primary  go to state 46
    UnaryOp  go to state 47


State 40

   23 Stmt: RETURN • Expr SEMICOLON
   26     | RETURN • Expr SEMICOLON

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 53
    Primary  go to state 46
    UnaryOp  go to state 47


State 41

   25 Stmt: WRITELN • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 42

   37 Primary: CHARACTER •

    $default  reduce using rule 37 (Primary)


State 43

   15 Block: LCURLY VarDeclList StmtList • RCURLY

    RCURLY  shift, and go to state 55


State 44

   19 StmtList: Stmt •
   20         | Stmt • StmtList

    ID         shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    NUMBER     shift, and go to state 36
    WRITE      shift, and go to state 37
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    RETURN     shift, and go to state 40
    WRITELN    shift, and go to state 41
    CHARACTER  shift, and go to state 42

    $default  reduce using rule 19 (StmtList)

    StmtList  go to state 56
    Stmt      go to state 44
    Expr      go to state 45
    Primary   go to state 46
    UnaryOp   go to state 47


State 45

   22 Stmt: Expr • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 46

   27 Expr: Primary •

    $default  reduce using rule 27 (Expr)


State 47

   28 Expr: UnaryOp • Expr

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 58
    Primary  go to state 46
    UnaryOp  go to state 47


State 48

   29 Expr: ID EQ • Expr

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 59
    Primary  go to state 46
    UnaryOp  go to state 47


State 49

   31 Expr: ID LBRACKET • Expr RBRACKET EQ Expr

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 60
    Primary  go to state 46
    UnaryOp  go to state 47


State 50

   30 Expr: ID LPAREN • ParamList RPAREN

    ID         shift, and go to state 61
    NUMBER     shift, and go to state 36
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    $default  reduce using rule 32 (ParamList)

    ParamList  go to state 62
    Primary    go to state 63


State 51

   24 Stmt: WRITE Expr • SEMICOLON

    SEMICOLON  shift, and go to state 64


State 52

   38 Primary: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 65


State 53

   23 Stmt: RETURN Expr • SEMICOLON
   26     | RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 66


State 54

   25 Stmt: WRITELN SEMICOLON •

    $default  reduce using rule 25 (Stmt)


State 55

   15 Block: LCURLY VarDeclList StmtList RCURLY •

    $default  reduce using rule 15 (Block)


State 56

   20 StmtList: Stmt StmtList •

    $default  reduce using rule 20 (StmtList)


State 57

   22 Stmt: Expr SEMICOLON •

    $default  reduce using rule 22 (Stmt)


State 58

   28 Expr: UnaryOp Expr •

    $default  reduce using rule 28 (Expr)


State 59

   29 Expr: ID EQ Expr •

    $default  reduce using rule 29 (Expr)


State 60

   31 Expr: ID LBRACKET Expr • RBRACKET EQ Expr

    RBRACKET  shift, and go to state 67


State 61

   35 Primary: ID •

    $default  reduce using rule 35 (Primary)


State 62

   30 Expr: ID LPAREN ParamList • RPAREN

    RPAREN  shift, and go to state 68


State 63

   34 ParamList: Primary • $@2 ParamList

    $default  reduce using rule 33 ($@2)

    $@2  go to state 69


State 64

   24 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 24 (Stmt)


State 65

   38 Primary: LPAREN Expr RPAREN •

    $default  reduce using rule 38 (Primary)


State 66

   23 Stmt: RETURN Expr SEMICOLON •
   26     | RETURN Expr SEMICOLON •

    ID         reduce using rule 23 (Stmt)
    ID         [reduce using rule 26 (Stmt)]
    SEMICOLON  reduce using rule 23 (Stmt)
    SEMICOLON  [reduce using rule 26 (Stmt)]
    NUMBER     reduce using rule 23 (Stmt)
    NUMBER     [reduce using rule 26 (Stmt)]
    WRITE      reduce using rule 23 (Stmt)
    WRITE      [reduce using rule 26 (Stmt)]
    MINUS      reduce using rule 23 (Stmt)
    MINUS      [reduce using rule 26 (Stmt)]
    LPAREN     reduce using rule 23 (Stmt)
    LPAREN     [reduce using rule 26 (Stmt)]
    RCURLY     reduce using rule 23 (Stmt)
    RCURLY     [reduce using rule 26 (Stmt)]
    RETURN     reduce using rule 23 (Stmt)
    RETURN     [reduce using rule 26 (Stmt)]
    WRITELN    reduce using rule 23 (Stmt)
    WRITELN    [reduce using rule 26 (Stmt)]
    CHARACTER  reduce using rule 23 (Stmt)
    CHARACTER  [reduce using rule 26 (Stmt)]
    $default   reduce using rule 23 (Stmt)


State 67

   31 Expr: ID LBRACKET Expr RBRACKET • EQ Expr

    EQ  shift, and go to state 70


State 68

   30 Expr: ID LPAREN ParamList RPAREN •

    $default  reduce using rule 30 (Expr)


State 69

   34 ParamList: Primary $@2 • ParamList

    ID         shift, and go to state 61
    NUMBER     shift, and go to state 36
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    $default  reduce using rule 32 (ParamList)

    ParamList  go to state 71
    Primary    go to state 63


State 70

   31 Expr: ID LBRACKET Expr RBRACKET EQ • Expr

    ID         shift, and go to state 34
    NUMBER     shift, and go to state 36
    MINUS      shift, and go to state 38
    LPAREN     shift, and go to state 39
    CHARACTER  shift, and go to state 42

    Expr     go to state 72
    Primary  go to state 46
    UnaryOp  go to state 47


State 71

   34 ParamList: Primary $@2 ParamList •

    $default  reduce using rule 34 (ParamList)


State 72

   31 Expr: ID LBRACKET Expr RBRACKET EQ Expr •

    $default  reduce using rule 31 (Expr)
