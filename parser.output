Nonterminals useless in grammar

    VarDeclList
    BinOp


Rules useless in grammar

   61 VarDeclList: ε
   62            | VarDecl VarDeclList
   63            | VarDecl

   64 BinOp: PLUS
   65      | MINUS
   66      | TIMES
   67      | DIVIDE


State 1 conflicts: 1 reduce/reduce
State 3 conflicts: 1 reduce/reduce
State 25 conflicts: 11 shift/reduce
State 58 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl
    4         | FunDeclList

    5 Decl: VarDecl
    6     | StmtList
    7     | IfStmt

    8 VarDecl: Type ID SEMICOLON
    9        | Type ID LBRACKET INTEGER RBRACKET SEMICOLON

   10 FunDeclList: FunDecl
   11            | FunDecl FunDeclList

   12 $@1: ε

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   14 ParamDecList: ε
   15             | ParamDecListTail

   16 ParamDecListTail: ParamDecl
   17                 | ParamDecl ParamDecListTail

   18 ParamDecl: Type ID

   19 Block: LCURLY DeclList RCURLY

   20 Type: INT
   21     | FLOAT
   22     | CHAR

   23 StmtList: Stmt
   24         | Stmt StmtList

   25 Stmt: SEMICOLON
   26     | WhileLoop
   27     | Expr SEMICOLON
   28     | RETURN Expr SEMICOLON
   29     | WRITE Expr SEMICOLON
   30     | WRITELN SEMICOLON

   31 IfStmt: IF LPAREN Condition RPAREN Block Else

   32 WhileLoop: WHILE LPAREN Condition RPAREN Block

   33 Condition: Primary LOGICOP Primary

   34 Else: ε
   35     | ELSE Block

   36 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ Primary
   37          | ID EQ ID LBRACKET INTEGER RBRACKET

   38 Expr: Primary
   39     | MathExpr
   40     | ArrayExpr
   41     | UnaryOp Expr
   42     | ID EQ Expr
   43     | ID LPAREN ParamList RPAREN

   44 Primary: ID
   45        | DECIMAL
   46        | INTEGER
   47        | CHARACTER

   48 MathExpr: Trm
   49         | MathExpr MINUS Trm
   50         | MathExpr PLUS Trm

   51 Trm: Factor
   52    | Trm TIMES Factor
   53    | Trm DIVIDE Factor

   54 Factor: ID
   55       | INTEGER
   56       | LPAREN MathExpr RPAREN

   57 ParamList: ε

   58 $@2: ε

   59 ParamList: Primary $@2 ParamList

   60 UnaryOp: MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 8 9 13 18 36 37 42 43 44 54
    SEMICOLON <string> (259) 8 9 25 27 28 29 30
    EQ <string> (260) 36 37 42
    INTEGER <number> (261) 9 36 37 46 55
    DECIMAL <floatValue> (262) 45
    WRITE <string> (263) 29
    FUNC <string> (264) 13
    IF <string> (265) 31
    ELSE <string> (266) 35
    WHILE <string> (267) 32
    PLUS <string> (268) 50
    MINUS <string> (269) 49 60
    TIMES <string> (270) 52
    DIVIDE <string> (271) 53
    LOGICOP <string> (272) 33
    LBRACKET <string> (273) 9 36 37
    RBRACKET <string> (274) 9 36 37
    LPAREN <string> (275) 13 31 32 43 56
    RPAREN <string> (276) 13 31 32 43 56
    LCURLY <string> (277) 19
    RCURLY <string> (278) 19
    INT <string> (279) 20
    CHAR <string> (280) 22
    FLOAT <string> (281) 21
    RETURN <string> (282) 28
    WRITELN <string> (283) 30
    CHARACTER <string> (284) 47


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    Program <ast> (31)
        on left: 1
        on right: 0
    DeclList <ast> (32)
        on left: 2 3 4
        on right: 1 2 19
    Decl <ast> (33)
        on left: 5 6 7
        on right: 2 3
    VarDecl <ast> (34)
        on left: 8 9
        on right: 5
    FunDeclList <ast> (35)
        on left: 10 11
        on right: 4 11
    FunDecl <ast> (36)
        on left: 13
        on right: 10 11
    $@1 (37)
        on left: 12
        on right: 13
    ParamDecList <ast> (38)
        on left: 14 15
        on right: 13
    ParamDecListTail <ast> (39)
        on left: 16 17
        on right: 15 17
    ParamDecl <ast> (40)
        on left: 18
        on right: 16 17
    Block <ast> (41)
        on left: 19
        on right: 13 31 32 35
    Type <ast> (42)
        on left: 20 21 22
        on right: 8 9 13 18
    StmtList <ast> (43)
        on left: 23 24
        on right: 6 24
    Stmt <ast> (44)
        on left: 25 26 27 28 29 30
        on right: 23 24
    IfStmt <ast> (45)
        on left: 31
        on right: 7
    WhileLoop <ast> (46)
        on left: 32
        on right: 26
    Condition <ast> (47)
        on left: 33
        on right: 31 32
    Else <ast> (48)
        on left: 34 35
        on right: 31
    ArrayExpr <ast> (49)
        on left: 36 37
        on right: 40
    Expr <ast> (50)
        on left: 38 39 40 41 42 43
        on right: 27 28 29 41 42
    Primary <ast> (51)
        on left: 44 45 46 47
        on right: 33 36 38 59
    MathExpr <ast> (52)
        on left: 48 49 50
        on right: 39 49 50 56
    Trm <ast> (53)
        on left: 51 52 53
        on right: 48 49 50 52 53
    Factor <ast> (54)
        on left: 54 55 56
        on right: 51 52 53
    ParamList <ast> (55)
        on left: 57 59
        on right: 43 59
    $@2 (56)
        on left: 58
        on right: 59
    UnaryOp <ast> (57)
        on left: 60
        on right: 41


State 0

    0 $accept: • Program $end

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    FUNC       shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    INT        shift, and go to state 11
    CHAR       shift, and go to state 12
    FLOAT      shift, and go to state 13
    RETURN     shift, and go to state 14
    WRITELN    shift, and go to state 15
    CHARACTER  shift, and go to state 16

    Program      go to state 17
    DeclList     go to state 18
    Decl         go to state 19
    VarDecl      go to state 20
    FunDeclList  go to state 21
    FunDecl      go to state 22
    Type         go to state 23
    StmtList     go to state 24
    Stmt         go to state 25
    IfStmt       go to state 26
    WhileLoop    go to state 27
    ArrayExpr    go to state 28
    Expr         go to state 29
    Primary      go to state 30
    MathExpr     go to state 31
    Trm          go to state 32
    Factor       go to state 33
    UnaryOp      go to state 34


State 1

   36 ArrayExpr: ID • LBRACKET INTEGER RBRACKET EQ Primary
   37          | ID • EQ ID LBRACKET INTEGER RBRACKET
   42 Expr: ID • EQ Expr
   43     | ID • LPAREN ParamList RPAREN
   44 Primary: ID •
   54 Factor: ID •

    EQ        shift, and go to state 35
    LBRACKET  shift, and go to state 36
    LPAREN    shift, and go to state 37

    SEMICOLON  reduce using rule 44 (Primary)
    SEMICOLON  [reduce using rule 54 (Factor)]
    $default   reduce using rule 54 (Factor)


State 2

   25 Stmt: SEMICOLON •

    $default  reduce using rule 25 (Stmt)


State 3

   46 Primary: INTEGER •
   55 Factor: INTEGER •

    SEMICOLON  reduce using rule 46 (Primary)
    SEMICOLON  [reduce using rule 55 (Factor)]
    $default   reduce using rule 55 (Factor)


State 4

   45 Primary: DECIMAL •

    $default  reduce using rule 45 (Primary)


State 5

   29 Stmt: WRITE • Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    CHARACTER  shift, and go to state 16

    ArrayExpr  go to state 28
    Expr       go to state 38
    Primary    go to state 30
    MathExpr   go to state 31
    Trm        go to state 32
    Factor     go to state 33
    UnaryOp    go to state 34


State 6

   13 FunDecl: FUNC • Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 11
    CHAR   shift, and go to state 12
    FLOAT  shift, and go to state 13

    Type  go to state 39


State 7

   31 IfStmt: IF • LPAREN Condition RPAREN Block Else

    LPAREN  shift, and go to state 40


State 8

   32 WhileLoop: WHILE • LPAREN Condition RPAREN Block

    LPAREN  shift, and go to state 41


State 9

   60 UnaryOp: MINUS •

    $default  reduce using rule 60 (UnaryOp)


State 10

   56 Factor: LPAREN • MathExpr RPAREN

    ID       shift, and go to state 42
    INTEGER  shift, and go to state 43
    LPAREN   shift, and go to state 10

    MathExpr  go to state 44
    Trm       go to state 32
    Factor    go to state 33


State 11

   20 Type: INT •

    $default  reduce using rule 20 (Type)


State 12

   22 Type: CHAR •

    $default  reduce using rule 22 (Type)


State 13

   21 Type: FLOAT •

    $default  reduce using rule 21 (Type)


State 14

   28 Stmt: RETURN • Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    CHARACTER  shift, and go to state 16

    ArrayExpr  go to state 28
    Expr       go to state 45
    Primary    go to state 30
    MathExpr   go to state 31
    Trm        go to state 32
    Factor     go to state 33
    UnaryOp    go to state 34


State 15

   30 Stmt: WRITELN • SEMICOLON

    SEMICOLON  shift, and go to state 46


State 16

   47 Primary: CHARACTER •

    $default  reduce using rule 47 (Primary)


State 17

    0 $accept: Program • $end

    $end  shift, and go to state 47


State 18

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 19

    2 DeclList: Decl • DeclList
    3         | Decl •

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    FUNC       shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    INT        shift, and go to state 11
    CHAR       shift, and go to state 12
    FLOAT      shift, and go to state 13
    RETURN     shift, and go to state 14
    WRITELN    shift, and go to state 15
    CHARACTER  shift, and go to state 16

    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 48
    Decl         go to state 19
    VarDecl      go to state 20
    FunDeclList  go to state 21
    FunDecl      go to state 22
    Type         go to state 23
    StmtList     go to state 24
    Stmt         go to state 25
    IfStmt       go to state 26
    WhileLoop    go to state 27
    ArrayExpr    go to state 28
    Expr         go to state 29
    Primary      go to state 30
    MathExpr     go to state 31
    Trm          go to state 32
    Factor       go to state 33
    UnaryOp      go to state 34


State 20

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 21

    4 DeclList: FunDeclList •

    $default  reduce using rule 4 (DeclList)


State 22

   10 FunDeclList: FunDecl •
   11            | FunDecl • FunDeclList

    FUNC  shift, and go to state 6

    $default  reduce using rule 10 (FunDeclList)

    FunDeclList  go to state 49
    FunDecl      go to state 22


State 23

    8 VarDecl: Type • ID SEMICOLON
    9        | Type • ID LBRACKET INTEGER RBRACKET SEMICOLON

    ID  shift, and go to state 50


State 24

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 25

   23 StmtList: Stmt •
   24         | Stmt • StmtList

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    WHILE      shift, and go to state 8
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    RETURN     shift, and go to state 14
    WRITELN    shift, and go to state 15
    CHARACTER  shift, and go to state 16

    ID         [reduce using rule 23 (StmtList)]
    SEMICOLON  [reduce using rule 23 (StmtList)]
    INTEGER    [reduce using rule 23 (StmtList)]
    DECIMAL    [reduce using rule 23 (StmtList)]
    WRITE      [reduce using rule 23 (StmtList)]
    WHILE      [reduce using rule 23 (StmtList)]
    MINUS      [reduce using rule 23 (StmtList)]
    LPAREN     [reduce using rule 23 (StmtList)]
    RETURN     [reduce using rule 23 (StmtList)]
    WRITELN    [reduce using rule 23 (StmtList)]
    CHARACTER  [reduce using rule 23 (StmtList)]
    $default   reduce using rule 23 (StmtList)

    StmtList   go to state 51
    Stmt       go to state 25
    WhileLoop  go to state 27
    ArrayExpr  go to state 28
    Expr       go to state 29
    Primary    go to state 30
    MathExpr   go to state 31
    Trm        go to state 32
    Factor     go to state 33
    UnaryOp    go to state 34


State 26

    7 Decl: IfStmt •

    $default  reduce using rule 7 (Decl)


State 27

   26 Stmt: WhileLoop •

    $default  reduce using rule 26 (Stmt)


State 28

   40 Expr: ArrayExpr •

    $default  reduce using rule 40 (Expr)


State 29

   27 Stmt: Expr • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 30

   38 Expr: Primary •

    $default  reduce using rule 38 (Expr)


State 31

   39 Expr: MathExpr •
   49 MathExpr: MathExpr • MINUS Trm
   50         | MathExpr • PLUS Trm

    PLUS   shift, and go to state 53
    MINUS  shift, and go to state 54

    $default  reduce using rule 39 (Expr)


State 32

   48 MathExpr: Trm •
   52 Trm: Trm • TIMES Factor
   53    | Trm • DIVIDE Factor

    TIMES   shift, and go to state 55
    DIVIDE  shift, and go to state 56

    $default  reduce using rule 48 (MathExpr)


State 33

   51 Trm: Factor •

    $default  reduce using rule 51 (Trm)


State 34

   41 Expr: UnaryOp • Expr

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    CHARACTER  shift, and go to state 16

    ArrayExpr  go to state 28
    Expr       go to state 57
    Primary    go to state 30
    MathExpr   go to state 31
    Trm        go to state 32
    Factor     go to state 33
    UnaryOp    go to state 34


State 35

   37 ArrayExpr: ID EQ • ID LBRACKET INTEGER RBRACKET
   42 Expr: ID EQ • Expr

    ID         shift, and go to state 58
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    CHARACTER  shift, and go to state 16

    ArrayExpr  go to state 28
    Expr       go to state 59
    Primary    go to state 30
    MathExpr   go to state 31
    Trm        go to state 32
    Factor     go to state 33
    UnaryOp    go to state 34


State 36

   36 ArrayExpr: ID LBRACKET • INTEGER RBRACKET EQ Primary

    INTEGER  shift, and go to state 60


State 37

   43 Expr: ID LPAREN • ParamList RPAREN

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 62
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 16

    $default  reduce using rule 57 (ParamList)

    Primary    go to state 63
    ParamList  go to state 64


State 38

   29 Stmt: WRITE Expr • SEMICOLON

    SEMICOLON  shift, and go to state 65


State 39

   13 FunDecl: FUNC Type • ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 66


State 40

   31 IfStmt: IF LPAREN • Condition RPAREN Block Else

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 62
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 16

    Condition  go to state 67
    Primary    go to state 68


State 41

   32 WhileLoop: WHILE LPAREN • Condition RPAREN Block

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 62
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 16

    Condition  go to state 69
    Primary    go to state 68


State 42

   54 Factor: ID •

    $default  reduce using rule 54 (Factor)


State 43

   55 Factor: INTEGER •

    $default  reduce using rule 55 (Factor)


State 44

   49 MathExpr: MathExpr • MINUS Trm
   50         | MathExpr • PLUS Trm
   56 Factor: LPAREN MathExpr • RPAREN

    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    RPAREN  shift, and go to state 70


State 45

   28 Stmt: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 71


State 46

   30 Stmt: WRITELN SEMICOLON •

    $default  reduce using rule 30 (Stmt)


State 47

    0 $accept: Program $end •

    $default  accept


State 48

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 49

   11 FunDeclList: FunDecl FunDeclList •

    $default  reduce using rule 11 (FunDeclList)


State 50

    8 VarDecl: Type ID • SEMICOLON
    9        | Type ID • LBRACKET INTEGER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 72
    LBRACKET   shift, and go to state 73


State 51

   24 StmtList: Stmt StmtList •

    $default  reduce using rule 24 (StmtList)


State 52

   27 Stmt: Expr SEMICOLON •

    $default  reduce using rule 27 (Stmt)


State 53

   50 MathExpr: MathExpr PLUS • Trm

    ID       shift, and go to state 42
    INTEGER  shift, and go to state 43
    LPAREN   shift, and go to state 10

    Trm     go to state 74
    Factor  go to state 33


State 54

   49 MathExpr: MathExpr MINUS • Trm

    ID       shift, and go to state 42
    INTEGER  shift, and go to state 43
    LPAREN   shift, and go to state 10

    Trm     go to state 75
    Factor  go to state 33


State 55

   52 Trm: Trm TIMES • Factor

    ID       shift, and go to state 42
    INTEGER  shift, and go to state 43
    LPAREN   shift, and go to state 10

    Factor  go to state 76


State 56

   53 Trm: Trm DIVIDE • Factor

    ID       shift, and go to state 42
    INTEGER  shift, and go to state 43
    LPAREN   shift, and go to state 10

    Factor  go to state 77


State 57

   41 Expr: UnaryOp Expr •

    $default  reduce using rule 41 (Expr)


State 58

   36 ArrayExpr: ID • LBRACKET INTEGER RBRACKET EQ Primary
   37          | ID • EQ ID LBRACKET INTEGER RBRACKET
   37          | ID EQ ID • LBRACKET INTEGER RBRACKET
   42 Expr: ID • EQ Expr
   43     | ID • LPAREN ParamList RPAREN
   44 Primary: ID •
   54 Factor: ID •

    EQ        shift, and go to state 35
    LBRACKET  shift, and go to state 78
    LPAREN    shift, and go to state 37

    SEMICOLON  reduce using rule 44 (Primary)
    SEMICOLON  [reduce using rule 54 (Factor)]
    $default   reduce using rule 54 (Factor)


State 59

   42 Expr: ID EQ Expr •

    $default  reduce using rule 42 (Expr)


State 60

   36 ArrayExpr: ID LBRACKET INTEGER • RBRACKET EQ Primary

    RBRACKET  shift, and go to state 79


State 61

   44 Primary: ID •

    $default  reduce using rule 44 (Primary)


State 62

   46 Primary: INTEGER •

    $default  reduce using rule 46 (Primary)


State 63

   59 ParamList: Primary • $@2 ParamList

    $default  reduce using rule 58 ($@2)

    $@2  go to state 80


State 64

   43 Expr: ID LPAREN ParamList • RPAREN

    RPAREN  shift, and go to state 81


State 65

   29 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 29 (Stmt)


State 66

   13 FunDecl: FUNC Type ID • LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 82


State 67

   31 IfStmt: IF LPAREN Condition • RPAREN Block Else

    RPAREN  shift, and go to state 83


State 68

   33 Condition: Primary • LOGICOP Primary

    LOGICOP  shift, and go to state 84


State 69

   32 WhileLoop: WHILE LPAREN Condition • RPAREN Block

    RPAREN  shift, and go to state 85


State 70

   56 Factor: LPAREN MathExpr RPAREN •

    $default  reduce using rule 56 (Factor)


State 71

   28 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 28 (Stmt)


State 72

    8 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 8 (VarDecl)


State 73

    9 VarDecl: Type ID LBRACKET • INTEGER RBRACKET SEMICOLON

    INTEGER  shift, and go to state 86


State 74

   50 MathExpr: MathExpr PLUS Trm •
   52 Trm: Trm • TIMES Factor
   53    | Trm • DIVIDE Factor

    TIMES   shift, and go to state 55
    DIVIDE  shift, and go to state 56

    $default  reduce using rule 50 (MathExpr)


State 75

   49 MathExpr: MathExpr MINUS Trm •
   52 Trm: Trm • TIMES Factor
   53    | Trm • DIVIDE Factor

    TIMES   shift, and go to state 55
    DIVIDE  shift, and go to state 56

    $default  reduce using rule 49 (MathExpr)


State 76

   52 Trm: Trm TIMES Factor •

    $default  reduce using rule 52 (Trm)


State 77

   53 Trm: Trm DIVIDE Factor •

    $default  reduce using rule 53 (Trm)


State 78

   36 ArrayExpr: ID LBRACKET • INTEGER RBRACKET EQ Primary
   37          | ID EQ ID LBRACKET • INTEGER RBRACKET

    INTEGER  shift, and go to state 87


State 79

   36 ArrayExpr: ID LBRACKET INTEGER RBRACKET • EQ Primary

    EQ  shift, and go to state 88


State 80

   59 ParamList: Primary $@2 • ParamList

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 62
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 16

    $default  reduce using rule 57 (ParamList)

    Primary    go to state 63
    ParamList  go to state 89


State 81

   43 Expr: ID LPAREN ParamList RPAREN •

    $default  reduce using rule 43 (Expr)


State 82

   13 FunDecl: FUNC Type ID LPAREN • $@1 ParamDecList RPAREN Block

    $default  reduce using rule 12 ($@1)

    $@1  go to state 90


State 83

   31 IfStmt: IF LPAREN Condition RPAREN • Block Else

    LCURLY  shift, and go to state 91

    Block  go to state 92


State 84

   33 Condition: Primary LOGICOP • Primary

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 62
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 16

    Primary  go to state 93


State 85

   32 WhileLoop: WHILE LPAREN Condition RPAREN • Block

    LCURLY  shift, and go to state 91

    Block  go to state 94


State 86

    9 VarDecl: Type ID LBRACKET INTEGER • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 95


State 87

   36 ArrayExpr: ID LBRACKET INTEGER • RBRACKET EQ Primary
   37          | ID EQ ID LBRACKET INTEGER • RBRACKET

    RBRACKET  shift, and go to state 96


State 88

   36 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ • Primary

    ID         shift, and go to state 61
    INTEGER    shift, and go to state 62
    DECIMAL    shift, and go to state 4
    CHARACTER  shift, and go to state 16

    Primary  go to state 97


State 89

   59 ParamList: Primary $@2 ParamList •

    $default  reduce using rule 59 (ParamList)


State 90

   13 FunDecl: FUNC Type ID LPAREN $@1 • ParamDecList RPAREN Block

    INT    shift, and go to state 11
    CHAR   shift, and go to state 12
    FLOAT  shift, and go to state 13

    $default  reduce using rule 14 (ParamDecList)

    ParamDecList      go to state 98
    ParamDecListTail  go to state 99
    ParamDecl         go to state 100
    Type              go to state 101


State 91

   19 Block: LCURLY • DeclList RCURLY

    ID         shift, and go to state 1
    SEMICOLON  shift, and go to state 2
    INTEGER    shift, and go to state 3
    DECIMAL    shift, and go to state 4
    WRITE      shift, and go to state 5
    FUNC       shift, and go to state 6
    IF         shift, and go to state 7
    WHILE      shift, and go to state 8
    MINUS      shift, and go to state 9
    LPAREN     shift, and go to state 10
    INT        shift, and go to state 11
    CHAR       shift, and go to state 12
    FLOAT      shift, and go to state 13
    RETURN     shift, and go to state 14
    WRITELN    shift, and go to state 15
    CHARACTER  shift, and go to state 16

    DeclList     go to state 102
    Decl         go to state 19
    VarDecl      go to state 20
    FunDeclList  go to state 21
    FunDecl      go to state 22
    Type         go to state 23
    StmtList     go to state 24
    Stmt         go to state 25
    IfStmt       go to state 26
    WhileLoop    go to state 27
    ArrayExpr    go to state 28
    Expr         go to state 29
    Primary      go to state 30
    MathExpr     go to state 31
    Trm          go to state 32
    Factor       go to state 33
    UnaryOp      go to state 34


State 92

   31 IfStmt: IF LPAREN Condition RPAREN Block • Else

    ELSE  shift, and go to state 103

    $default  reduce using rule 34 (Else)

    Else  go to state 104


State 93

   33 Condition: Primary LOGICOP Primary •

    $default  reduce using rule 33 (Condition)


State 94

   32 WhileLoop: WHILE LPAREN Condition RPAREN Block •

    $default  reduce using rule 32 (WhileLoop)


State 95

    9 VarDecl: Type ID LBRACKET INTEGER RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 105


State 96

   36 ArrayExpr: ID LBRACKET INTEGER RBRACKET • EQ Primary
   37          | ID EQ ID LBRACKET INTEGER RBRACKET •

    EQ  shift, and go to state 88

    $default  reduce using rule 37 (ArrayExpr)


State 97

   36 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ Primary •

    $default  reduce using rule 36 (ArrayExpr)


State 98

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList • RPAREN Block

    RPAREN  shift, and go to state 106


State 99

   15 ParamDecList: ParamDecListTail •

    $default  reduce using rule 15 (ParamDecList)


State 100

   16 ParamDecListTail: ParamDecl •
   17                 | ParamDecl • ParamDecListTail

    INT    shift, and go to state 11
    CHAR   shift, and go to state 12
    FLOAT  shift, and go to state 13

    $default  reduce using rule 16 (ParamDecListTail)

    ParamDecListTail  go to state 107
    ParamDecl         go to state 100
    Type              go to state 101


State 101

   18 ParamDecl: Type • ID

    ID  shift, and go to state 108


State 102

   19 Block: LCURLY DeclList • RCURLY

    RCURLY  shift, and go to state 109


State 103

   35 Else: ELSE • Block

    LCURLY  shift, and go to state 91

    Block  go to state 110


State 104

   31 IfStmt: IF LPAREN Condition RPAREN Block Else •

    $default  reduce using rule 31 (IfStmt)


State 105

    9 VarDecl: Type ID LBRACKET INTEGER RBRACKET SEMICOLON •

    $default  reduce using rule 9 (VarDecl)


State 106

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN • Block

    LCURLY  shift, and go to state 91

    Block  go to state 111


State 107

   17 ParamDecListTail: ParamDecl ParamDecListTail •

    $default  reduce using rule 17 (ParamDecListTail)


State 108

   18 ParamDecl: Type ID •

    $default  reduce using rule 18 (ParamDecl)


State 109

   19 Block: LCURLY DeclList RCURLY •

    $default  reduce using rule 19 (Block)


State 110

   35 Else: ELSE Block •

    $default  reduce using rule 35 (Else)


State 111

   13 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block •

    $default  reduce using rule 13 (FunDecl)
